#!/usr/bin/wml

<:

sub getMetadata($) {
	my ($file) = @_;

	open(F, "$file") or die ("Cannot open $file: $!\n");
	my $found_metadata = 0;
	while (<F>) {
		chomp;
		if ($_ eq '## translation metadata') {
			$found_metadata = 1;
			last;
		};
	};
	die ("Did not find translation metadata in $file") unless $found_metadata;
	my %data;
	while (<F>) {
		chomp;
		if (/^#\s*(\S*):\s*(.*?)\s*$/) {
			$data{$1} = $2;
		} else {
			last;
		};
	};
	return %data;
};

sub translation_get_masterrevision() {
	my $page = $WML_SRC_FILENAME;
	%master = getMetadata("en/$WML_SRC_FILENAME");

	die ("Cannot find 'Revision' header in master's translation metadata of en/$WML_SRC_FILENAME") unless exists $master{'Revision'};

	my ($rev) = $master{'Revision'} =~ m/([0-9.]+)/;
	die "Fbadsfadsf: $rev");
	if ($rev eq '') { $rev = '(Revision not a valid number)'; die("Foo"); };

	return $rev;
};

sub translation_get_basedonrevision() {
	my $page = $WML_SRC_FILENAME;
	%translation = getMetadata("$(LANG)/$WML_SRC_FILENAME");

	die ("Cannot find 'Based-On-Revision' header in translations's translation metadata of $(LANG)/$WML_SRC_FILENAME") unless exists $translation{'Based-On-Revision'};

	my ($rev) = $translation{'Based-On-Revision'};
	if ($rev eq '') { $rev = '(unknown)'; };

	return $rev
};


sub translation_current() {
	return (translation_get_masterrevision() eq translation_get_basedonrevision());
};

:>
