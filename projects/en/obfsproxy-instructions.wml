## translation metadata
# Revision: $Revision$
# Translation-Priority: 4-optional

#include "head.wmi" TITLE="obfsproxy: Installation instructions" CHARSET="UTF-8"

<div id="content" class="clearfix">
  <div id="breadcrumbs">
    <a href="<page index>">Home &raquo; </a>
    <a href="<page projects/projects>">Projects &raquo; </a>
    <a href="<page projects/obfsproxy>">obfsproxy</a>
  </div>
  <div id="maincol">

    <!-- PUT CONTENT AFTER THIS TAG -->

    <h1 id="instructions">Obfsproxy Instructions</h1>

    <img src="$(IMGROOT)/obfsproxy_diagram.png" alt="client torrc"></a>

    <p>
    <img width="7%" height="7%" style="float: left;" src="$(IMGROOT)/icon-Obfsproxy.jpg">
    <b> Hey! </b>
    Are you looking for the guide on how to set up an obfuscated
    bridge on a Debian system?
    <a href="../projects/obfsproxy-debian-instructions.html.en">Check
    this out</a>.
    </p>
    <br><br>

    <h3>Step 1: Install dependencies, obfsproxy, and Tor</h3>
    <br>

    <p>
    You will need a C compiler (<em>gcc</em>), the <em>autoconf</em>
    and <em>autotools</em> build system, the <em>git</em> revision
    control system, <em>pkg-config</em> and <em>libtool</em>,
    <em>libevent-2</em> and its headers, and the development headers of
    <em>OpenSSL</em>.
     </p>

    <p>
    On Debian testing or Ubuntu oneiric, you could do: <br>
    <tt># apt-get install autoconf autotools-dev gcc git pkg-config libtool libevent-2.0-5 libevent-dev libevent-openssl-2.0-5 libssl-dev</tt>
    </p>

    <p>
    If you're on a more stable Linux, you can either <a
    href="https://trac.torproject.org/projects/tor/ticket/5009#comment:9">try
    our experimental backport libevent2 debs</a> or <a
    href="https://trac.torproject.org/projects/tor/ticket/5009#comment:17">build
    libevent2 from source</a>.
    </p>

    <p>
    Clone obfsproxy from its git repository:<br>
    <tt>$ git clone https://git.torproject.org/obfsproxy.git</tt> <br>

    The above command should create and populate a directory named
    'obfsproxy' in your current directory.
    </p>

    <p>
    Compile obfsproxy: <br>
    <tt>$ cd obfsproxy</tt> <br>
    <tt>$ ./autogen.sh && ./configure && make</tt> <br>
    </p>

    <p>
    Optionally, <strong>as root</strong> install obfsproxy in your
    system: <br>
    <tt># make install</tt>
    </p>

    <p>
    If you prefer not to install obfsproxy as root, you can instead
    just modify the Transport lines in your torrc file (explained below)
    to point to your obfsproxy binary.
    </p>

    <p>
    You will need Tor 0.2.3.11-alpha or later.
    </p>

    <hr>

    <h3 id="client_instructions">Step 2a: If you're the client...</h3>
    <br>

    <p>
    First, you need to learn the address of a bridge that supports
    obfsproxy. If you don't know any, try asking a friend to set one
    up for you. Then the appropriate lines to your <a href="<page
    docs/faq>#torrc">tor configuration file</a>:
    </p>

    <p>
    <tt>UseBridges 1</tt> <br>
    <tt>Bridge obfs2 128.31.0.34:1051</tt> <br>
    <tt>ClientTransportPlugin obfs2 exec /usr/local/bin/obfsproxy --managed</tt>
    </p>

    <p>
    Don't forget to replace <em>128.31.0.34:1051</em> with the IP address
    and port that the bridge's obfsproxy is listening on.
    </p>

    <p> <br>
    <img src="$(IMGROOT)/sidenav-arrow.png">
    <strong>Congratulations!</strong> Your traffic should now be
    obfuscated by obfsproxy. You are done! You can now start using Tor.
    </p>

    <br> <br> <br> <br>

    <hr>

    <br> <br> <br> <br>

    <h3 id="bridge_instructions">Step 2b: If you're the bridge...</h3>
    <br>

    <p>
    Configure your Tor to <a href="<page docs/bridges>#RunningABridge">be
    a bridge</a> (e.g. by setting "ORPort 9001" and "BridgeRelay 1"). Then
    add this new line to your <a href="<page docs/faq>#torrc">tor
    configuration file</a>:
    </p>

    <p>
    <tt>ServerTransportPlugin obfs2 exec /usr/local/bin/obfsproxy --managed</tt>
    </p>

    <p>
    Launch Tor using this configuration file. You can do this by using
    your favorite init script, or by pointing the Tor binary to the
    torrc file:
    <p>

    <p>
    <img src="$(IMGROOT)/obfs-spawn_tor_bridge.png" alt="spawn tor" height="117" width="879"></a>
    </p>

    <p>
    Next, find the TCP port opened by obfsproxy. Look in your log file
    for a line similar to this one: <br>
    <img src="$(IMGROOT)/obfs-log_checking.png" alt="bridge torrc" width="437" height="14"></a>
    <br>
    The last number, in this case <em>34545</em>, is the TCP port
    number that your clients should point their obfsproxy to.
    </p>

    <p>
    <img src="$(IMGROOT)/sidenav-arrow.png">
    <strong>Congratulations!</strong> Tell your clients to point their
    obfsproxy to your IP address and to port <em>34545</em>.
    </p>

    <br>

  </div>
  <!-- END MAINCOL -->
  <div id = "sidecol">
#include "side.wmi"
#include "info.wmi"
  </div>
  <!-- END SIDECOL -->
</div>
<!-- END CONTENT -->
#include <foot.wmi>

