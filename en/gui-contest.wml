## translation metadata
# Revision: $Revision$

#include "head.wmi" TITLE="GUI Contest"

<div class="main-column">

<h2>Tor GUI Contest</h2>
<hr />
<p>DRAFT IN PROGRESS</p>
<hr />
<a id="Overview"></a>
<h3><a class="anchor" href="#Overview">Overview</a></h3>

<p>
Tor is a decentralized network of computers on the Internet that increases
privacy in Web browsing, instant messaging, and other applications. We
estimate there are some 50,000 Tor users currently, routing their traffic
through about 250 volunteer Tor servers on five continents. However, Tor's
current user interface approach --- running as a service in the background
--- does a poor job of communicating network status and security levels
to the user.
</p>

<p>
The Tor project, affiliated with the
<a href="http://www.eff.org/">Electronic Frontier Foundation</a>, is
running a UI contest to develop a vision of how Tor can
work in a user's everyday anonymous browsing experience. Some of the
challenges include how to make alerts and error conditions visible on
screen; how to let the user configure Tor to use or avoid certain routes
or nodes; how to learn about the current state of a Tor connection,
including which servers it uses; and how to find out whether (and which)
applications are using Tor safely.
</p>

<hr />
<a id="Goals"></a>
<h3><a class="anchor" href="#Goals">Goals</a></h3>

<p>Contestants will produce a work of <a
href="http://www.opensource.org/">Open Source Software</a>
that will
provide a user interface to the Tor system by way of the <a
href="<cvssandbox>control/doc/howto.txt">Tor Controller
Protocol</a>.</p>

<p>We are looking for a vision of how Tor can work in a user's everyday
anonymous browsing experience.</p>

<p>Entries will:</p>
<ul>
<li>Allow the user to fully configure Tor rather than manually searching
for and opening text files.</li>
<li>Let users learn about the current state of their Tor connection
(including which servers they are connected to, and how many connections
they have), and find out whether any of their applications are using
it.</li>
<li>Make alerts and error conditions visible to the user.</li>
<li>Run on at least one of Windows, Linux, and OS&nbsp;X, on a
not-unusually-configured consumer-level machine.</li>
</ul>

<p>In addition, they may:</p>
<ul>
<li>Provide detailed information about which
applications, ports, or packets are (or are not!) passing through Tor,
including accounting for both Tor- and non-Tor traffic.</li>
<li>Provide
additional statistics about the Tor connection.</li>
<li>Give users more control over how their Tor behaves at certain times
of day or in other contexts (like operating as a server).</li>
</ul>

<p>Some examples of useful features include:</p>
<ul>
<li>How much bandwidth is Tor using? How does this compare
to the overall network traffic to/from the computer?</li>
<li>Is there network traffic from ports or applications that the user
intended to be anonymized?</li>
<li>What Tor servers does the user know about on the network? Where are
they? How available are they?</li>
<li>An interface for displaying or controlling Tor paths:
"show me the network from Africa by way of Asia". Think of the global
satellite map from the movie <i>Sneakers</i>.</li>
<li>Configure other running applications to use Tor (for example,
by modifying or working through the network stack, and/or by altering
application configurations).</li>
<li>Provide an elegant installer for Tor, your GUI submission, and
other supporting applications.</li>
<li>Make your GUI manage the Tor process and other supporting applications
-- start them, stop them, realize when they've died.</li>
<li>Provide meaningful defaults for a good Tor experience.</li>
<li>Provide application-level anonymity -- that is, not just paying
attention to transport anonymity on the level of Tor, but also paying
attention to the anonymity of the http headers, cookies, etc.</li>
<li>Let the user specify different Tor config option sets depending on
time of day (e.g. daytime vs. nighttime).</li>
<li>Provide useful controller functions for Tor servers too --
for example, walk the user through recommended bandwidth configurations
and exit policies.</li>
<li>Have a "minimized view" of your GUI for common use, and then a more
detailed view or set of windows when the user wants more detail.</li>
<li>Provide a button or some automatically updating interface to let
the user learn whether Tor is working currently, perhaps by accessing an
external what's-my-IP site and seeing if it thinks you're a Tor server;
and give useful messages and recommendations if it doesn't seem to
be working.</li>
<li>Provide a way to automatically configure local firewalls (ipchains,
Windows firewalls, etc) to let Tor traffic out (and in, for Tor
servers). As a bonus, configure it to prevent non-Tor traffic from
leaving (and notify when it tries).</li>
</ul>

<hr />
<a id="Categories"></a>
<h3><a class="anchor" href="#Categories">Contest Categories</a></h3>

<p>
The design contest will proceed in two phases: first sketches and then
working code. You are invited to submit to either phase, or both phases.
For each phase, our panel of judges will recognize the
best submissions. All qualifying entries will receive an EFF Tor T-shirt
(subject to availability). The best sketches and working implementations
will be published on the Tor website.
</p>

<p><b>Sketches:</b>
the goal of this phase is to produce a mock-up of a functioning interface.
This should include design documents describing how the interface should
function. If you want, it should also include graphical elements that
can be used by programmers.
</p>

<p>
A qualifying sketch will present an informal specification for a
design. That is, it will present with some degree of thoroughness all
of the major interfaces that we might expect to encounter, all of the
major functionality for the interface, and a reasonable story about
how it would be integrated into currently-existing tools (if, indeed,
it would be). One example, with more detail than we would require, is
<a href="http://ui.netbeans.org/docs/ui/junits/promo_f.html">the NetBeans
UI for JUnit</a>. Note that it walks through multiple interfaces,
highlighting the features and functions of the various buttons.
</p>

<ul>
<li><b>Most featureful interface</b> will be awarded to the graphic design
that would provide usable, clear access to the most aspects of the Tor
system, covering many or most of the categories on the "useful features"
list.</li>
<li><b>Most usable experience</b> will be awarded to the graphic
design that would provide the most unobtrusive Tor experience while still
covering all criteria (working, perhaps, on the "no news is good news"
theory).</li>
<li><b>Clearest implementation guidance</b> will be awarded to the
graphic design that provides the cleanest package of graphic elements
and design documentation to aid would-be implementers.</li>
</ul>

<p><b>Code:</b> the goal of this phase is to produce a working
implementation. You may use any of the sketches, graphics, or ideas from
the first phase (with appropriate credit to
their authors), or you can make your own. See the <a
href="http://wiki.noreply.org/noreply/TheOnionRouter/ContestSamples">Contest
Samples</a> wiki page for some other images you can reuse.
</p>

<p>
An acceptable entry will be a package of free software that builds and
runs. It can be a stand-alone application, or it can act as an extension
or plugin to other broadly-available free software. The entry will
demonstrate the points in the Goals section: that is, it will be able
to control, display, and maintain awareness as discussed above.
</p>

<ul>
<li><b>Most featureful interface</b> will be awarded to the application
that provides usable, clear access to the most aspects of the Tor system,
covering many or most of the categories on the "additional" list.</li>
<li><b>Most usable experience</b> will be awarded to the
application that provides the most unobtrusive Tor experience while
still covering all criteria (working, perhaps, on the "no news is good
news" theory).</li>
<li><b>Most flexible</b> will be awarded to the best system that runs
smoothly on all three of Windows, Linux, and OS&nbsp;X; extra points will be
awarded for additional systems.</li>
</ul>

<p>We reserve the right to award other awards as the entries deserve.</p>

<hr />
<a id="Submit"></a>
<h3><a class="anchor" href="#Submit">How to Submit</a></h3>

<p>Submissions for phase one (sketches) should come as:</p>
<ul>
<li>Images in an html page. The images must be able to be viewed on an
ordinary browser (e.g. Firefox). You can submit proprietary formats too,
but if you do then you need to also export them to something we can
all read.</li>
<li>A design document (txt, html, pdf, or ps) as described in the
<a href="#Categories">Contest Categories</a> section above.</li>
</ul>

<p>Submissions for phase two (code) should come as:</p>

<ul>
<li>Source code, with appropriate makefiles or documentation explaining
how to build it. Must be licensed under a free/open source license, as
defined by <a href="http://www.opensource.org/licenses/">OSI</a>. See <a
href="http://wiki.noreply.org/noreply/TheOnionRouter/ContestFAQ#DefineFree">this
FAQ entry</a> for clarification.</li>
<li>Compiled binaries or bytecodes for at least one platform of choice.</li>
<li>A design document (txt, html, pdf, or ps) providing an overview of
what major functions to look for and what functions were implemented.</li>
</ul>

<p>To submit your entry, make a web page with
all your materials on it, then add a line to <a
href="http://wiki.noreply.org/noreply/TheOnionRouter/ContestEntries">The
GUI Contest Entries Wiki</a>. (If you don't have a web page of
your own to put your entry on, find a friend who does, or mail <a
href="mailto:tor-gui@freehaven.net">tor-gui@freehaven.net</a> and we'll
put it up on a temporary page.</p>

<p>If you put it up on your own site, you can continue to update and
modify it. Remember that submitting early means you can get feedback
from Tor users and make it into a better submission!</p>

<hr />
<a id="Criteria"></a>
<h3><a class="anchor" href="#Criteria">Criteria</a></h3>

<p>Awards will be granted on the basis of (in rough preference order):</p>

<ul>
<li>Usability (<a
href="http://wiki.noreply.org/noreply/TheOnionRouter/ContestFAQ#DefineUsable">what
does this mean?</a>)</li>
<li>Informativeness: can the user learn what they need to know, both in terms
of using the network and also in terms of security decisions?</li>
<li>Total user experience</li>
<li>Aesthetics</li>
<li>Responsiveness</li>
<li>Stability and robustness</li>
<li>Internationalization (multiple language support)</li>
<li>Installation experience</li>
</ul>

<hr />
<a id="Judges"></a>
<h3><a class="anchor" href="#Judges">Judges</a></h3>

<p>Judging will be led by a panel of N prominent specialists in usability
and security (to be announced).</p>

<hr />
<a id="Timeline"></a>
<h3><a class="anchor" href="#Timeline">Timeline</a></h3>

<ul>
<li>Phase 1 deadline (sketches): October 31.</li>
<li>Phase 1 judging: November 31.</li>
<li>Phase 2 deadline (code): January 31, 2006.</li>
</ul>

<p>Winners will be announced on the webpage and also at the SOUPS 2006
conference. (Here's a suggestion on one approach to <a
href="http://wiki.noreply.org/noreply/TheOnionRouter/ContestFAQ#AcademicResearch">academic
usability research on Tor</a>.)</p>

<hr />
<a id="Clarifications"></a>
<h3><a class="anchor" href="#Clarifications">Questions and Clarifications</a></h3>

<p>Check back <a
href="gui-contest.html#Clarifications">here</a>
periodically, and look at the <a
href="http://wiki.noreply.org/noreply/TheOnionRouter/ContestFAQ">Contest
FAQ wiki</a>, for FAQ entries, clarifications, etc.</p>

<!--
<hr />
<h3>Testing criteria</h3>

<p>To check for basic acceptability, the contest will be judged
with several major tests. For example, the system designer should expect:</p>

<ul>
<li>A minimal test: does it work?</li>
<li>Several parameters, both obscure and obvious, will be configured. Is
it possible and easy to do so?</li>
<li>A network will be connected once the system is running. Can the
user tell that the network is now live?</li>
<li>The network will be disconnected or interrupted. Can the user tell
that the network has an error?</li>
</ul>
-->

<hr />
<a id="Technical"></a>
<h3><a class="anchor" href="#Technical">Technical Notes</a></h3>

<p>Shortly before phase two begins, the Tor developers will release
a canonical version of Tor. This is the version that will be used for
judging the contest; please ensure that you use this version. Bugfixes
to this version of Tor will be announced to the contest web site.</p>

<p>The Tor developers will also release test rigs (libraries) in both Java
and Python that demonstrate Tor's controller protocol. Code submissions
may be able to save a lot of time by using this code as a skeleton. You
can check out the <a href="<cvssandbox>control/">development
versions of these libraries</a> now.
</p>

<hr />
<a id="Legal"></a>
<h3><a class="anchor" href="#Legal">Legal Notes</a></h3>

<p>By submitting your entry to be considered in the Tor GUI contest, you
hereby:</p>

<ul>
<li>(A) represent and warrant that (1) the entry was created by you and
that you own all rights to the entry or have the authorized rights to
submit such entry and grant the licenses below; and (2) that the
entry does not infringe on any third party copyright or other
intellectual property rights; AND</li>
<li>(B) EITHER (1) grant us a worldwide, royalty-free, non-exclusive,
perpetual license to reproduce, edit, perform, display, publish, make
derivative works, and otherwise use the entry as we see fit,
including without limitation, incorporating (in whole or in part)
into the Tor software, and to sublicense such rights; OR, (2)
provide the entry pursuant to a license that complies with the
<a href="http://www.opensource.org/docs/definition.php">Open
Source Definition</a>, such as the 3-clause BSD, MIT, or
GPL licenses, or (where applicable) provide the entry licensed under
the <a href="http://creativecommons.org/licenses/by/2.5/">Creative
Commons Attribution</a> license. If you provide the entry pursuant to
such a license, you must include the applicable information in your
submission.</li>
</ul>

  </div><!-- #main -->

#include <foot.wmi>
