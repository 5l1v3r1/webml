// Droits d'auteur The Tor Project, Inc.
// Se référer au fichier LICENSE pour toute information sur la license
// Ceci est un fichier asciidoc utilisé pour générer la page principale manpage/html.
// Apprenez asciidoc sur http://www.methods.co.nz/asciidoc/userguide.html
TOR(1)
======

NOM
----
tor - Le routeur Onion de deuxième génération


SYNOPSIS
--------
**tor** [__OPTION__ __value__]...

DESCRIPTION
-----------
__tor__ est un service de communication qui cible les communications
anonymes. Les utilisateurs choisissent un chemin routé à travers une série
de noeuds et négotient un "circuit virtuel" à travers ce réseau au sein
duquel, chaque noeud connaît son prédécesseur et son successeur mais n'a
aucune information sur les autres. Le trafic qui circule dans le circuit est
déchiffré par une clef symétrique à chaque noeud, ce qui révèle le prochain
noeud. +

A la base, __tor__ met à disposition un réseau distribué de serveurs («
routeurs oignon »). L'utilisateur fait rebondir ses flux de communication
TCP -- trafic du Web, FTP, SSH -- autour du réseau, de façon à ce que
receveurs, observateurs, et les routeurs eux mêmes ont difficulté à
apprendre la provenance de ces flux.

OPTIONS
-------
**-h**, **-help**::
Afficher un court message d'aide et quitter.

**-f** __FICHIER__::
FICHIER contient d'avantage de paires « option paramètre » (@CONFDIR@/torrc par défaut)

**--hash-password**::
    Génère un mot de passe haché pour l'accès au port de contrôle.

**--list-fingerprint**::
    Génère vos clefs et affiche votre surnom et une empreinte.

**--verify-config**::
Vérifier que le fichier de configuration est valide.

**--nt-service**::
    **--service [install|remove|start|stop]** Gestion du service Tor
    sur Windows NT/2000/XP. Vous trouverez davantage d'instructions sur
    https://trac.torproject.org/projects/tor/wiki/doc/TorFAQ#WinNTService

**--list-torrc-options**::
Enumerer les options valides.

**--version**::
Afficher la version de Tor et quitter.

**--quiet**::
    Démarre Tor sans console de journal à moins que cela soit indiqué explicitement.
    (Par défaut, Tor démarre avec un niveau de journalisation à "notice" ou plus sur
    la console, jusqu'à ce qu'il ait complètement intégré sa configuration.)

Other options can be specified either on the command-line (--option
    value), or in the configuration file (option value or option "value").
    Options are case-insensitive. C-style escaped characters are allowed inside
    quoted values.   Options on the command line take precedence over
    options found in the configuration file, except indicated otherwise.  To
    split one configuration entry into multiple lines, use a single \ before
    the end of the line.  Comments can be used in such multiline entries, but
    they must start at the beginning of a line.

**BandwidthRate** __N__ **bytes**|**KB**|**MB**|**GB**::
    A token bucket limits the average incoming bandwidth usage on this node to
    the specified number of bytes per second, and the average outgoing
    bandwidth usage to that same value.  If you want to run a relay in the
    public network, this needs to be _at the very least_ 20 KB (that is,
    20480 bytes). (Default: 5 MB)

**BandwidthBurst** __N__ **bytes**|**KB**|**MB**|**GB**::
    Limite la taille maximale de jetons (également connu sous le terme burst) au chiffre
    en nombre d'octets indiqué, dans chaque direction. (Défaut: 10 MB)

**MaxAdvertisedBandwidth** __N__ **bytes**|**KB**|**MB**|**GB**::
    Aucune bande passante supérieure à cette option ne sera affichée comme
    BandwithRate, si cette option est spécifiée. Les opérateurs de serveur qui désirent
    réduire leur nombre de clients qui veulent construire des circuits à traver eux (
    puisque c'est proportionnel à la bande passante affichée) peuvent réduire ainsi
    leur consommation CPU sans impacter leurs performances réseau.

**RelayBandwidthRate** __N__ **bytes**|**KB**|**MB**|**GB**::
    If not 0, a separate token bucket limits the average incoming bandwidth
    usage for \_relayed traffic_ on this node to the specified number of bytes
    per second, and the average outgoing bandwidth usage to that same value.
    Relayed traffic currently is calculated to include answers to directory
    requests, but that may change in future versions. (Default: 0)

**RelayBandwidthBurst** __N__ **bytes**|**KB**|**MB**|**GB**::
    If not 0, limit the maximum token bucket size (also known as the burst) for
    \_relayed traffic_ to the given number of bytes in each direction.
    (Default: 0)

**PerConnBWRate** __N__ **bytes**|**KB**|**MB**|**GB**::
    Si spécifiée, limite la bande passante pour chaque connexion non issue
    d'un relais. Vous ne devriez jamais avoir besoin de modifier cette valeur car
    elle est définie pour tout le réseau dans le consensus. Votre relais utilisera
    cette valeur par défaut. (Défaut: 0)

**PerConnBWBurst** __N__ **bytes**|**KB**|**MB**|**GB**::
    Si spécifiée, limite la bande passante pour chaque connexion non issue
    d'un relais. Vous ne devriez jamais avoir besoin de modifier cette valeur car
    elle est définie pour tout le réseau dans le consensus. Votre relais utilisera
    cette valeur par défaut. (Défaut: 0)

**ConnLimit** __NUM__::
    The minimum number of file descriptors that must be available to the Tor
    process before it will start. Tor will ask the OS for as many file
    descriptors as the OS will allow (you can find this by "ulimit -H -n").
    If this number is less than ConnLimit, then Tor will refuse to start. +
 +
    You probably don't need to adjust this. It has no effect on Windows
    since that platform lacks getrlimit(). (Default: 1000)

**ConstrainedSockets** **0**|**1**::
    Lorsque cette option est indiquée, Tor indiquera au noyau d'essayer de
    compresser les tampons de toutes les sockets à la taille indiquée dans
    **ConstrainedSockSize**. Elle est utile pour les serveurs virtuels et les autres
    environnements où les tampons TCP sont limités au niveau système. Si vous
    êtes sur un serveur virtuel et que vous rencontrez le message: "Error
    creating network socket: No buffer space available", c'est que vous faîtes
    face à ce problème précis. +
 +
    La solution la plus adaptée est que l'administrateur augmente lui-même la
    quantité de tampon pour la machine via /proc/sys/net/ipv4/tcp_mem ou un
    équivalent. Cette option de configuration intervient en second niveau. +
 +
    L'option DirPort ne devrait pas être utilisée si les tampons TCP sont rares. Le
    cache des requêtes d'annuaire consomme des sockets supplémentaires qui
    intensifient le problème. +
 +
    Vous ne devriez **pas** autoriser cette option à moins de rencontre le problème
    "pas assez d'espace de tampon disponible". Réduire la taille des tampons TCP
    modifie la taille de la fenêtre des flux TCP et réduira le flot proportionnellement au
    temps de parcours sur les connexions entre deux hôtes très éloignés. (Défaut: 0.)

**ConstrainedSockSize** __N__ **bytes**|**KB**::
    Lorsque **ConstrainedSockets** est activée, les tampons de réception et de
    transmission de toutes les sockets seront fixée à cette limite. La valeur doit être
    comprise entre 2048 et 262114 en incréments de 1024 octets. Par défaut, la
    valeur de 8192 est recommandée.

**ControlPort** __Port__::
    Si indiqué, Tor acceptera des connexions sur ce port et leur permettra
    de contrôler le processus Tor en utilisant le protocole de contrôle de Tor
    (décrit dans control-spec.txt). Note: À moins d'avoir renseigné l'option
    **HashedControlPassword** ou **CookieAuthentication**, cette option permettra
    à n'importe quel processus de l'hôte local de contrôler Tor. Cette option est indispensable pour
    de nombreux contrôleurs Tor lesquels utilisent majoritairement la valeur de 9051.

**ControlListenAddress** __IP__[:__PORT__]::
    Lie la socket du contrôleur sur cette adresse. Si vous avez spécifier un port,
    il sera utilisé à la place de ControlPort. Nous vous recommandons fortement de
    laisser cette option vide à moins de savoir ce que vous faîtes donner l'accès au
    port de contrôle pour des attaquants est très dangereux. (Défaut: 127.0.0.1)
    Cette directive peut être indiquée plusieurs fois pour lier plusieurs adresses/ports.

**ControlSocket** __Chemin__::
    Identique à ControlPort, mais écoute sur une socket Unix au lieu d'une socket
    TCP. (Pour les systèmes Unix et Unix-like seulement.)

**HashedControlPassword** __mot_de_passe_haché__::
    Les connexions au port de contrôle ne sont pas autorisées si le processus ne connaît pasDon't allow any connections on the control port except when the other
    le mot de passe dont le hash est __mot_de_pass_haché__. Vous pouvez hacher le
    mot de passe en lançant la commande "tor --hash-password
    __password__". Vous pouvez fournir plusieurs mots de passe acceptables en utilisant
    plusieurs lignes HashedControlPassword.

**CookieAuthentication** **0**|**1**::
    Lorsque cette option est renseignée à 1, les connexions sur le port de contrôle sont rejetées
    à moins que le processus connaisse le contenu d'un fichier nommé
    "control_auth_cookie", que Tor créé dans son répertoire de données. Cette
    méthode d'authentification ne devrait être utilisée que sur des systèmes avec un
    système de fichiers bien sécurisé. (Défaut: 0)

**CookieAuthFile** __Chemin__::
    Si indiquée, cette option modifie le chemin et le nom de fichier par défaut
    pour le fichier de cookies de Tor. (Consultez CookieAuthentication ci-dessus.)

**CookieAuthFileGroupReadable** **0**|**1**|__Nom_de_Groupe__::
    Si cette option est mise à 0, le groupe du système de fichier mentionné
    ne pourra pas lire le fichier de cookie. Si cette option est à 1, le fichier sera
    lisible par le GID par défaut. [Rendre le fichier lisible par d'autres groupes n'
    est pas encore implémenté; merci de nous faire savoir si vous avez besoin
    de cette fonctionnalité.] (Défaut: 0).

**DataDirectory** __DIR__::
    Enregistre les données de travail dans DIR (Défaut: @LOCALSTATEDIR@/lib/tor)

**DirServer** [__nickname__] [**flags**] __address__:__port__ __fingerprint__::
    Use a nonstandard authoritative directory server at the provided address
    and port, with the specified key fingerprint. This option can be repeated
    many times, for multiple authoritative directory servers. Flags are
    separated by spaces, and determine what kind of an authority this directory
    is. By default, every authority is authoritative for current ("v2")-style
    directories, unless the "no-v2" flag is given. If the "v1" flags is
    provided, Tor will use this server as an authority for old-style (v1)
    directories as well. (Only directory mirrors care about this.) Tor will
    use this server as an authority for hidden service information if the "hs"
    flag is set, or if the "v1" flag is set and the "no-hs" flag is **not** set.
    Tor will use this authority as a bridge authoritative directory if the
    "bridge" flag is set. If a flag "orport=**port**" is given, Tor will use the
    given port when opening encrypted tunnels to the dirserver. Lastly, if a
    flag "v3ident=**fp**" is given, the dirserver is a v3 directory authority
    whose v3 long-term signing key has the fingerprint **fp**. +
 +
    If no **dirserver** line is given, Tor will use the default directory
    servers. NOTE: this option is intended for setting up a private Tor
    network with its own directory authorities. If you use it, you will be
    distinguishable from other users, because you won't believe the same
    authorities they do.

**AlternateDirAuthority** [__nickname__] [**flags**] __address__:__port__ __fingerprint__ +

**AlternateHSAuthority** [__nickname__] [**flags**] __address__:__port__ __fingerprint__ +

**AlternateBridgeAuthority** [__nickname__] [**flags**] __address__:__port__ __ fingerprint__::
    As DirServer, but replaces less of the default directory authorities. Using
    AlternateDirAuthority replaces the default Tor directory authorities, but
    leaves the hidden service authorities and bridge authorities in place.
    Similarly, Using AlternateHSAuthority replaces the default hidden service
    authorities, but not the directory or bridge authorities.

**DisableAllSwap** **0**|**1**::
    Si mise à 1, Tor tentera de vérouiller toutes les pages mémoires actuelles
    et futures, de manière à ce que la mémoire ne puisse être paginée. Windows,
    OS X et Solaris ne sont pas gérés pour le moment. Nous pensons que cette
    fonctionnalité marche bien sous les distributions modernes GNU/Linux et qu'elle
    devrait bien fonctionner sous les systèmes *BSD (non testé). Cette option
    impose de lancer Tor sous le compte root et vous devriez utiliser l'option
    **User** pour réduire proprement les privilèges de Tor. (Défaut: 0)

**FetchDirInfoEarly** **0**|**1**::
    Si activée à 1, Tor récupèrera toujours les information d'annuaire comme les
    caches d'annuaire, même si vous ne satisfaisez pas les critères normaux
    de récupération en amont. Les utilisateurs normaux ne devraient pas modifier
    cette option. (Défaut: 0)

**FetchDirInfoExtraEarly** **0**|**1**::
    Si mise à 1, Tor récupérera les informations d'annuaire avant les autres
    caches. Il essayera de télécharger les informations d'annuaire peu après
    le début de la période de consensus. Les utilisateurs ne devraient pas
    utiliser cette option. (Défaut: 1)

**FetchHidServDescriptors** **0**|**1**::
    Si mise à 0, Tor ne rapatriera pas les descripteurs de service caché
    des autorités de rendez-vous. Cette option est utile uniquement si
    vous utilisez un contrôleur qui gère le chargement des données de
    service caché pour vous. (Défaut: 1)

**FetchServerDescriptors** **0**|**1**::
    Si mise à 0, Tor ne rapatriera pas les résumés d'état réseau ou les
    descripteurs de serveurs des autorités d'annuaire. Cette option est
    utile uniquement si vous utilisez un contrôleur qui gère le chargement
    des données d'annuaire pour vous. (Défaut: 1)

**FetchHidServDescriptors** **0**|**1**::
    Si mise à 1, Tor rapatriera tout descripteur non obsolète qu'il trouvera
    sur les autorités d'annuaire. Sinon, il évitera de charger ces descripteurs
    inutiles, par exemple, ceux des routeurs qui ne fonctionnent pas. Cette
    option est utile uniquement si vous utilisez le script "exitlist" qui énumère
    les noeuds existants à une certaine adresse. (Défaut: 0)

**HTTPProxy** __host__[:__port__]::
    Tor lancera ses requêtes vers les annuaires à travers cet hôte:port (ou hôte:80
    si le port n'est pas indiqué), au lieu de se connecter directement aux serveurs
    d'annuaires.

**HTTPProxyAuthenticator** __nomèutilisateur:mot_de_passe__::
    Si défini, Tor utilisera ces éléments pour l'authentification BASIC vers les proxy HTTP
    , telle que spécifiée dans la RFC 2617. C'est actuellement la seule forme de proxy HTTP
    que Tor gère; n'hésitez pas à envoyer un patch si vous désirez en supporter
    d'autres.

**HTTPSProxy** __hôte__[:__port__]::
    Tor effectuera ses connexions OR (SSL) à travers cet hôte:port (ou
    hôte:443 si le port n'est pas indiqué), via HTTP CONNECT plutôt qu'en se connectant
    directement aux serveurs. Vous pouvez renseigner l'option **FascistFirewall** pour
    réduire le nombre de ports auxquels vous pouvez vous connecter, si votre proxy HTTPS
    ne permet de se connecter qu'à certains ports.

**HTTPSProxyAuthenticator** __utilisateur:mot_de_passe__::
    Si définie, Tor utilisera le couple utilisateur:mot_de_passe pour l'authentification
    en mode Basic sur un proxy HTTPS, comme dans la RFC 2617. C'est pour l'instant,
    la seule forme d'authentification de proxy HTTPS gérée par Tor; merci de nous
    envoyer un patch si vous voulez en gérer d'autres.

**Socks4Proxy** __hôte__[:__port__]::
    Tor effectuera toutes ses connexions OR à travers le proxy SOCKS 4 sur hôte:port
    (ou hôte:1080 si le port n'est pas indiqué).

**Socks5Proxy** __hôte__[:__port__]::
    Tor effectuera toutes ses connexions OR à travers le proxy SOCKS 5 sur hôte:port
    (ou hôte:1080 si le port n'est pas indiqué).

**Socks5ProxyUsername** __nom_utilisateur__ +

**Socks5ProxyPassword** __password__::
    Si renseigné, l'authentification au serveur SOCKS 5 utilisera l'identifiant et le mot de passe
    selon le respect de la RFC 1929. L'identifiant et le mot de passe doivent comporter entre 1 et
    255 charactères tous les deux.

**KeepalivePeriod** __NUM__::
    Pour empêcher les pare-feux de fermer les connexions, cette option permet d'envoyer une cellule
    keepalive toutes les NUM secondes sur les connexions ouvertes utilisées. Si la connexion
    n' pas de circuit ouvert, elle sera fermée après NUM secondes d'
    inactivité. (Défaut: 5 minutes)

**Log** __SévéritéMin__[-__SévéritéMax__] **stderr**|**stdout**|**syslog**::
    Envoie tous les messages entre __SévéritéMin__ et __SévéritéMax__ sur le flux
    standard de sortie, le flux standard d'erreur ou vers le système de journalisation. (
    la valeur "syslog" est gérée uniquement sous Unix.) Les niveaux de sévérité reconnus
    sont debug, info, notice, warn et err. Nous vous conseillons d'utiliser "notice" dans la
    plupart des cas car tout ce qui sera plus verbeux peut révéler de l'information sensible
    à un attaquant disposant de ces journaux. Si un seul niveau de sévérité est donné, tous
    les messages de ce niveau ou supérieur à ce niveau seront envoyés à la destination listée.

**Log** __minSeverity__[-__maxSeverity__] **file** __NOM_DE_FICHIER__::
    Comme au dessus mais envoie les messages de journal vers le nom de fichier.
    L'option "Log" peut apparaître plus d'une fois par fichier de configuration.
    Les messages sont envoyés à tous les journaux qui gèrent leur niveau
    de sévérité.

**Log** **[**__domain__,...**]**__minSeverity__[-__maxSeverity__] ... **file** __FILENAME__ +

**Log** **[**__domain__,...**]**__minSeverity__[-__maxSeverity__] ... **stderr**|**stdout**|**syslog** ::
    As above, but select messages by range of log severity __and__ by a
    set of "logging domains".  Each logging domain corresponds to an area of
    functionality inside Tor.  You can specify any number of severity ranges
    for a single log statement, each of them prefixed by a comma-separated
    list of logging domains.  You can prefix a domain with $$~$$ to indicate
    negation, and use * to indicate "all domains".  If you specify a severity
    range without a list of domains, it matches all domains. +
 +
    This is an advanced feature which is most useful for debugging one or two
    of Tor's subsystems at a time. +
 +
    The currently recognized domains are: general, crypto, net, config, fs,
    protocol, mm, http, app, control, circ, rend, bug, dir, dirserv, or, edge,
    acct, hist, and handshake.  Domain names are case-insensitive. +
 +
    For example, "`Log [handshake]debug [~net,~mm]info notice stdout`" sends
    to stdout: all handshake messages of any severity, all info-and-higher
    messages from domains other than networking and memory management, and all
    messages of severity notice or higher.

**LogMessageDomains** **0**|**1**::
    If 1, Tor includes message domains with each log message.  Every log
    message currently has at least one domain; most currently have exactly
    one.  This doesn't affect controller log messages. (Default: 0)

**OutboundBindAddress** __IP__::
    Indique l'origine des connexions sortantes par l'adresse IP indiquée. C'est
    utile uniquement si vous avez plusieurs interfaces réseau et que vous voulez
    router les connexions sortantes de Tor vers une seule d'entre elles. Ce paramètre
    est ignoré pour les connexions vers les adresses loopback (127.0.0.0/8 et ::1).

**PidFile** __FICHIER__::
    Au démarrage, écrit le PID dans le FICHIER. Lors d'une fermeture propre,
    supprime le FICHIER.

**ProtocolWarnings** **0**|**1**::
    Si renseigné à 1, Tor journalisera au niveau \'warn' de nombreux autres cas qui
    ne se conforment pas à la spécification Tor. En temps normal, ils sont journalisés
    au niveau \'info'. (Défaut: 0)

**RunAsDaemon** **0**|**1**::
    Si spécifié à 1, Tor forke et devient un démon en tâche de fond. Cette option n'a aucun effet
    sous Windows; vous pouvez utiliser l'option --service de la ligne de commande à la place.
    (Défaut: 0)

**LogTimeGranularity** __NUM__::
    Set the resolution of timestamps in Tor's logs to NUM milliseconds.
    NUM must be positive and either a divisor or a multiple of 1 second.
    Note that this option only controls the granularity written by Tor to
    a file or console log.  Tor does not (for example) "batch up" log
    messages to affect times logged by a controller, times attached to
    syslog messages, or the mtime fields on log files.  (Default: 1 second)

**SafeLogging** **0**|**1**|**relay**::
    Tor peut potentiellement masquer les messages sensibles dans votre
    journal des évènements (ex: des adresses) en les remplaçant par la
    chaîne [scrubbed]. Ainsi, le journal conserve son utilité sans laisser filtrer
    des informations sur les sites qu'un utilisateur a consulté. +
 +
    Si cette option est mise à 0, Tor n'effectuera aucune modification. Si elle
    est mise à 1, toutes les chaînes sensibles seront remplacées. Si elle est
    mise à relay, tous les messages concernant le relais seront masqués mais
    tous les messages concernant le client ne le seront pas. (Défaut: 1)

**User** __UID__::
    Au démarrage, change l'uid vers celui de cet utilisateur ainsi que son groupe.

**HardwareAccel** **0**|**1**::
    Si non nul, essaye d'utiliser le matériel interne dédié aux opérations de chiffrement
    si disponible. (Défaut: 0)

**AccelName** __NOM__::
    Tente de charger le moteur dynamique d'accélération cryptographique du même    nom dans OpenSSL. Cette option doit être utilisée si vous avez un tel moteur matériel.
    Les noms peuvent être vérifiés avec la commande openssl engine.

**AccelDir** __DIR__::
    Indiquez cette option si vous utilisez du matériel d'accélération et que le moteur
    de son implementation est situé ailleurs que dans l'emplacement par défaut d'OpenSSL.

**AvoidDiskWrites** **0**|**1**::
    Si différent de zéro, essaye d'écrire moins fréquemment sur le disque.
    Cette optione est particulièrement utile lors de l'utilisation de carte flash ou
    d'un support avec un nombre limité de cycles d'écriture. (Défaut: 0)

**TunnelDirConns** **0**|**1**::
    Si différent de zéro, on fera un circuit à un seul saut et une connexion chiffrée vers     son ORPort, en cas de contact d'un serveur d'annuaire gérant cette option.
    (Défaut: 1)

**PreferTunneledDirConns** **0**|**1**::
    Si non nul, nous éviterons les serveurs d'annuaire qui ne gèrent pas lesers that don't support tunneled
    connexions tunnels aux annuaires, lorsque c'est possible. (Défaut: 1)

**CircuitPriorityHalflife** __NUM1__::
    Si cette valeur est indiquée, l'algorithme de choix des circuits et des relais
    par défaut sera remplacé. Lorsque la valeur est 0, l'algorithme boucle sur
    les circuits actifs d'une connexion. Lorsque la valeur est positive, l'algorithme
    privilégiera les points les moins utilisés, l'utilisation étant exponentielle selon
    la valeur CircuitPriorityHalflife (en secondes). Si cette option n'est pas indiquée
    l'algorithme utilisera la valeur distribuée par le réseau. C'est une option avancée,
    en règle générale, vous n'avez pas besoin de vous en inquiéter. (Défaut: non indiquée.)

**DisableIOCP** **0**|**1**::
    If Tor was built to use the Libevent's "bufferevents" networking code
    and you're running on Windows, setting this option to 1 will tell Libevent
    not to use the Windows IOCP networking API.  (Default: 1)

OPTIONS DU CLIENT
-----------------

Les options suivantes ne concernent que les clients (c'est à dire si
**SocksPort** est non nul):

**AllowInvalidNodes** **entry**|**exit**|**middle**|**introduction**|**rendezvous**|**...**::
    Si certains serveurs Tor ne fonctionnent pas correctement, les autorités
    d'annuaire peuvent les marquer manuellement comme invalides, indiquant
    qu'il n'est pas recommandé de les utiliser comme noeud d'entrée ou de sortie.
    Vous pouvez toutefois les utiliser entre les deux. Par défaut, cette option est
    "middle,rendezvous", les autres choix n'étant pas conseillés.

**ExcludeSingleHopRelays** **0**|**1**::
    This option controls whether circuits built by Tor will include relays with
    the AllowSingleHopExits flag set to true. If ExcludeSingleHopRelays is set
    to 0, these relays will be included. Note that these relays might be at
    higher risk of being seized or observed, so they are not normally
    included.  Also note that relatively few clients turn off this option,
    so using these relays might make your client stand out.
    (Default: 1)

**Bridge** __IP__:__ORPort__ [empreinte]::
    Lorsque cette option est utilisée en conjonction avec UseBridges, Tor
    utilisera le relais situé à "IP:ORPORT" comme une "passerelle" vers le réseau
    Tor. Si "empreinte" est fournie (même format que pour DirServer), Tor vérifiera
    si le relais désigné dispose bien de la même. L'empreinte est aussi utilisée pour
    vérifier le descripteur de passerelle dans l'autorité de passerelles si elle est fournie
    et si UpdateBridgesFromAuthority est également activée.

**LearnCircuitBuildTimeout** **0**|**1**::
    If 0, CircuitBuildTimeout adaptive learning is disabled. (Default: 1)

**CircuitBuildTimeout** __NUM__::

    Try for at most NUM seconds when building circuits. If the circuit isn't
    open in that time, give up on it. If LearnCircuitBuildTimeout is 1, this
    value serves as the initial value to use before a timeout is learned. If
    LearnCircuitBuildTimeout is 0, this value is the only value used.
    (Default: 60 seconds.)

**CircuitIdleTimeout** __NUM__::
    Si un circuit n'a pas été utilisé depuis NUM secondes, alors il sera fermé.
    Ainsi, lorsque le client Tor est inactif, il peut fermer ses circuits et ses
    connexions TLS. De plus, si nous avons un circuit incapable de faire aboutir
    nos requêtes, il n'occupera pas d'emplacement indéfiniment. (Défaut: 1
    heure.)

**CircuitStreamTimeout** __NUM__::
    Si supérieur à zéro, cette option remplace notre timing interne sur le
    décompte de secondes entre l'arrêt d'utilisation d'un circuit et la construction
    d'un nouveau. Si votre réseau est particulièrement lent, vous pouvez
    mettre 60 dans cette option. (Défaut: 0)

**ClientOnly** **0**|**1**::
    Lorsque cette option est à 1, Tor ne sera ni un serveur ni un serveur d'annuaire.
    Par défaut, Tor se comporte comme un client tant que ORPort n'est pas
    configuré. (Habituellement, vous n'avez pas besoin de spécifier cette option
    Tor est assez intelligent pour savoir si vous avez une bande passante suffisante
    et assez fiable pour vous comporter comme un serveur efficace.) (Défaut: 0)

**ExcludeNodes** __node__,__node__,__...__::
    Une liste des empreintes d'identifiants, de surnoms, de codes de pays et de motifs d'adresses
    de noeuds à ne jamais utiliser lors de la construction d'un circuit. (Exemple:
    ExcludeNodes SlowServer, $    EFFFFFFFFFFFFFFF, \{cc}, 255.254.0.0/8)

**ExcludeExitNodes** __noeud__,__noeud__,__...__::
    Une liste d'empreintes d'identité, de surnoms, de code de pays et de
    motifs d'adresses de noeuds à ne jamais utiliser comme noeud de sortie.
    A noter que tous les noeuds listés dans ExcludeNodes sont automatiquement
    considéré comme faisant partie de celle-ci.

**EntryNodes** __node__,__node__,__...__::
    Une liste des empreintes d'identifiants, de surnoms, de codes de pays et de motifs d'adresses
    de noeuds à utiliser pour le premier saut dans les circuits de sortie. Ils sont
    traités seulement comme des préférences à moins que l'option StrictNodes (voir ci-dessous) soit indiquée.

**ExitNodes** __node__,__node__,__...__::
    Une liste des empreintes d'identifiants, de surnoms, de codes de pays et de motifs d'adresses
    de noeuds à utiliser pour le dernier saut dans les circuits de sortie. Ils sont
    traités seulement comme des préférences à moins que l'option StricNodes (voir ci-dessous) soit indiquée.

**StrictNodes** **0**|**1**::
    Si mise à 1 et que l'option EntryNodes est activée, Tor n'utilisera aucun
    noeud de la liste EntryNodes comme noeud d'entrée sur un circuit normal.
    Si mise à 1 et que l'option ExitNodes est activée, Tor n'utilisera aucun
    noeud de la liste ExtNodes comme noeud de sorte. A noter que Tor peut
    toujours les utiliser dans les circuits qui ne sortent pas comme les requêtes
    d'annuaire et le circuits de services cachés.

**FascistFirewall** **0**|**1**::
    Si mise à 1, Tor créera des connexions sortantes vers les relais uniquement
    sur les ports autorisés par votre firewall (par défaut 80 et 443; consultez
    **FirewallPorts**). Cette option vous permet d'utiliser Tor comme client derrière
    un firewall avec une politique restrictive mais ne vous permettra pas de monter
    un serveur. Si vous préférez une configuration plus fine, utilisez l'option
    ReachableAddresses à la place.

**FirewallPorts** __PORTS__::
    Une liste de ports que votre firewall vous permet de joindre. Utilisée uniquement
    lorsque **FascistFirewall** est activé. Cette option est obsolète; utilisez
    ReachableAddress à la place. (Défaut: 80, 443)

**HidServAuth** __adresse-oignon__ __cookie-auth__ [__nom-service__]::
    Autorisation client pour un service caché. Les adresses oignon contiennent 16
    caractères dans a-z2-7 plus ".onion" et les cookies d'authentification contiennent
    22 caractères dans A-Za-z0-9+/. Le nom du service est utilisé uniquement pour
    des besoins internes, par exemple pour les contrôleurs Tor. Cette option peut
    être utilisée plusieurs fois pour différents services cachés. Si un service caché
    demande une authentification et que cette option n'est pas activée, le service
    caché sera inaccessible. Les services cachés peuvent être configuré pour forcer
    l'autorisation en utilisant l'option **HiddenServiceAuthorizeClient**.

**ReachableAddresses** __ADDR__[/__MASQ__][:__PORT__]...::
    Une liste séparée par des virgules d'adresses IP et de ports auxquels votre
    pare-feux vous autorise à vous connecter. Le format est le même que celui
    des adresses dans ExitPolicy à l'exception du fait que "accept" est mis en
    oeuvre uniquement si "reject" est utilisé. Par exemple, \'ReachableAddresses
    99.0.0.0/8, reject 18.0.0.0/8:80, accept \*:80' signifie que votre pare-feux vous
    permet de vous connecter à tout dans le réseau 99, rejette les ports 80 du réseau
    18 et accepte les connexions sur le port 80 sinon. (Défaut: \'accept \*.*'.).

**ReachableDirAddresses** __ADDR__[/__MASQ__][:__PORT__]...::
    Comme **ReachableAddresses**, une liste d'adresse et de ports. Tor
    utilisera ces restrictions lorsqu'il récupérera les information d'annuaire en
    utilisant des requêtes HTTP GET standardes. Si cette option n'est pas remplie
    explicitement, **ReachableAddresses** sera utilisée. Si **HTTPProxy** est
    activée, alors les connexions passeront par ce proxy.

**ReachableORAddresses** __ADDR__[/__MASQ__][:__PORT__]...::
    Comme **ReachableAddresses*, une liste d'adresses et de ports. Tor
    utilisera ces restrictions pour se connecter aux routeurs Oignons en
    utilisant TLS/SSL. Si elle n'est pas explicitement remplie, la valeur inscrite
    dans **ReachableAddresses** est utilisée. Si **HTTPSProxy** est activée
    alors ces connexions se feront par ce proxy. +
 +
    La séparation entre **ReachableORAddresses** et
    **ReachableDirAddresses** n'est intéressante que si vous vous connectez
    par des proxys (voir **HTTPProxy** et **HTTPSProxy**). La majorité des
    proxys limitent leur connexions TLS (que Tor utilise pour se connecter aux
    routeurs Oignon) au port 443 et certains se limitent à des requêtes HTTP GET
    (que Tor utilise pour récupérer les information d'annuaire) sur le port 80.

**LongLivedPorts** __PORTS__::
    Une liste de ports de services qui emploient des connexions de grande durée
    (ex: le chat et les shells interactifs). Les circuits pour les flux utilisant ces ports
    comporteront uniquement des noeuds à grande durée de vie pour réduire les
    chances qu'un noeud s'arrête avant que le flux ne soit terminé. (Défaut: 21, 22,
    706, 1863, 5050, 5190, 5222, 5223, 6667, 6697, 8300)

**MapAddress** __adresse__ __nouvelle_adresse__::
    Lorsqu'une requête pour cette adresse arrive à Tor, il la réécrira en la
    nouvelle adresse avant de la traiter. Par exemple, si vous désirez que les
    connexions vers www.indymedia.org sortent par __torserver__ (où
    __torserver__ est le surnom d'un serveur), utilisez "MapAddress
    www.indymedia.org www.indymedia.org.torserver.exit".

**NewCircuitPeriod** __NUM__::
    Lance la construction d'un nouveau circuit tous les NUM secondes. (Défaut: 30
    secondes)

**MaxCircuitDirtiness** __NUM__::
    Permet de réutiliser un circuit libéré il y a au moins NUM secondes mais
    ne permet pas d'affecter un flux à un circuit trop ancien. (Défaut: 10 minutes)

**NodeFamily** __node__,__node__,__...__::
    The Tor servers, defined by their identity fingerprints or nicknames,
    constitute a "family" of similar or co-administered servers, so never use
    any two of them in the same circuit. Defining a NodeFamily is only needed
    when a server doesn't list the family itself (with MyFamily). This option
    can be used multiple times.  In addition to nodes, you can also list
    IP address and ranges and country codes in {curly braces}.

**EnforceDistinctSubnets** **0**|**1**::
    Si mise à 1, Tor n'utilisera pas dans le même circuit, deux serveurs dont
    les adresses IP seraient "trop proches". Actuellement, deux adresses sont
    "trop proches" si elles sont dans la même plage /16. (Défaut: 1)

**SocksPort** __PORT__::
    Déclare ce port comme celui de connexion des applications utilisant
    le protocole Socks. Mettez le à 0 si vous ne voulez pas autoriser de
    connexions d'applications. (Défaut: 9050)

**SocksListenAddress** __IP__[:__PORT__]::
    Écoute sur cette adresse les connexions des applications utilisant le
    protocole Socks. (Défaut: 127.0.0.1) Vous pouvez également indiquer un
    port (ex: 192.168.0.1:9100). Cette option peut être indiquée plusieurs fois
    pour écouter sur plusieurs adresses/ports.

**SocksPolicy** __politique__,__politique__,__...__::
    Configure une politique d'entrée pour ce serveur, pour limiter qui peut se
    connecter aux ports SocksPort et DNSPort. Les politiques ont le même
    format que les politiques de sortie ci-dessous.

**SocksTimeout** __NUM__::
    Permet à une connexion socks d'attendre NUM secondes pour son initialisation
    et NUM secondes pour trouver un circuit approprié avant d'échouer. (Défaut:
    2 minutes.)

**TrackHostExits** __hôte__,__.domaine__,__...__::
    Pour chaque valeur de cette liste séparée par des virgules, Tor tracera les
    connexions récentes aux hôtes décrits dans cette valeur et tentera de réutiliser
    le même noeud de sortie pour chacun. Si la valeur est préfixée avec un \'.\', elle
    est traitée comme un domaine entier. Si une des valeurs est juste un \'.\', elle
    sera traitée comme l'univers. Cette option est utile si vous vous connectez souvent
    à des sites qui font expirer vos cookies d'authentification (i.e. qui ferment votre
    session) si votre adresse IP change. A noter que cette option a l'inconvénient de
    rendre moins opaque l'association entre un historique donné et un utilisateur.
    Toutefois, ceux qui veulent y arriver peuvent, de toute manière, le faire à travers
    les cookies ou d'autres protocoles spécifiques.

**TrackHostExitsExpire** __NUM__::
    Étant donné que les serveurs s'allument et s'éteignent, il est important
    de mettre un terme à l'association entre un hôte et un serveur de sortie
    après NUM secondes. Par défaut, cette valeur vaut 1800 seconde (30 minutes).

**UpdateBridgesFromAuthority** **0**|**1**::
    Lorsque cette option est activée (en conjonction avec UseBridges), Tor tentera
    de récupérer les descripteurs de passerelles depuis l'autorité renseignée.
    Il utilisera une requête directe si l'autorité répond par une erreur 404. (Défaut:0)

**UseBridges** **0**|**1**::
    Utilisée, cette option indique à Tor de transférer les descripteurs de chaque passerelle dans les 
    lignes de configuration "Bridge" et utilise ces relais comme portes d'entrées et d'annuaires.
    (Défaut: 0)

**UseEntryGuards** **0**|**1**::
    Si cette option est mise à 1, uniquement quelques serveurs d'entrée sont utilisés
    par Tor. Changer constamment de serveur permet à un adversaire qui en détient
    quelques-uns d'améliorer ses chances d'observer des parties de vos chemins. (Défaut à 1.)

**NumEntryGuards** __NUM__::
    Si UseEntryGuards est enregistré à 1, nous essaierons d'utiliser un total de NUM routeurs
    comme nos entrées à long terme pour nos circuits. (Défaut: 3.)

**SafeSocks** **0**|**1**::
    Lorsque cette option est activée, Tor rejettera les connexions d'application
    qui utilisent des variantes non sécurisées du protocole socks -- celles qui
    fournissent seulement une adresse IP, indiquant que l'application a déjà fait
    la résolution DNS. Spécifiquement, ce sont les connexions socks4 et socks5
    n'effectuant pas de résolution DNS distante. (Défaut à 0.)

**TestSocks** **0**|**1**::
    Lorsque cette option est activée, Tor consignera un message de notification
    pour chaque connexion au port Socks indiquant si la requête employée est
    saine ou non (consultez l'entrée ci-dessus sur SafeSocks). Permet de déterminer
    si une application utilisant Tor génère des fuites de requêtes DNS. (Défaut: 0)

**WarnUnsafeSocks** **0**|**1**::
    When this option is enabled, Tor will warn whenever a request is
    received that only contains an IP address instead of a hostname. Allowing
    applications to do DNS resolves themselves is usually a bad idea and
    can leak your location to attackers. (Default: 1)

**VirtualAddrNetwork** __Address__/__bits__::
    When Tor needs to assign a virtual (unused) address because of a MAPADDRESS
    command from the controller or the AutomapHostsOnResolve feature, Tor
    picks an unassigned address from this range. (Default:
    127.192.0.0/10) +
 +
    When providing proxy server service to a network of computers using a tool
    like dns-proxy-tor, change this address to "10.192.0.0/10" or
    "172.16.0.0/12". The default **VirtualAddrNetwork** address range on a
    properly configured machine will route to the loopback interface. For
    local use, no change to the default VirtualAddrNetwork setting is needed.

**AllowNonRFC953Hostnames** **0**|**1**::
    Lorsque cette option est désactivée, Tor bloquera les noms d'hôtes contenant
    des caractères illégaux (comme @ et :) plutôt que de les faire résoudre par un
    noeud de sortie. Permet d'identifier les tentatives accidentelles de résolution d'URLS.
    (Défaut: 0)

**AllowDotExit** **0**|**1**::
    If enabled, we convert "www.google.com.foo.exit" addresses on the
    SocksPort/TransPort/NATDPort into "www.google.com" addresses that exit from
    the node "foo". Disabled by default since attacking websites and exit
    relays can use it to manipulate your path selection. (Default: 0)

**FastFirstHopPK** **0**|**1**::
    Lorsque cette option est activée, Tor utilise l'étape de clef publique
    comme premier saut de création de circuit. C'est assez sécurisé, sachant
    que TLS a déjà été utilisé pour authentifier le relais et pour mettre en
    place les clefs de sécurité ultérieures. Désactiver cette option rend la
    construction de circuits plus longue. +
 +
    A noter que Tor utilisera toujours l'étape de clef publique comme premier
    saut si il fonctionne en tant que relais et qu'il n'utilisera pas cette étape s'il
    ne connaît pas la clef oignon du premier saut. (Défaut: 1)

**TransPort** __PORT__::
    Si non nul, active un proxy transparent sur le port __PORT__ (par convention,
    9040). Requiert un OS gérant les proxys transparents tels que pf sous BSD ou
    iptables sous Linux. Si vous avez l'intention d'utiliser Tor en tant que proxy transparent
    pour un réseau, vous devriez examiner et modifier la valeur par défaut de
    VirtualAddrNetwork. Vous devriez également indiquer l'option TransListenAddress pour
    le réseau que vous voulez proxyfier. (Défaut: 0).

**TransListenAddress** __IP__[:__PORT__]::
    Réserve cette adresse pour écouter les connexions de proxy transparent.
    (Défaut: 127.0.0.1). C'est utile pour exporter un serveur proxy transparent à
    un réseau entier.

**NATDPort** __PORT__::
    Permet à de vielles version de ipfw (inclus dans des versions anciennes de
    FreeBSD) d'envoyer des connexions à travers Tor en utilisant le protocole NATD.
    Cette option concerne uniquement les personnes ne pouvant utiliser TransPort.

**NATDListenAddress** __IP__[:__PORT__]::
    Écoute sur cette adresse pour les connexion NATD. (Défaut: 127.0.0.1).

**AutomapHostsOnResolve** **0**|**1**::
    Lorsque cette option est activée et que nous récupérons une requête de
    résolution de nom qui se termine par un des suffixes de **AutomapHostsSuffixes**,
    Tor affecte une adresse virtuelle non utilisée à cette adresse et la retourne.
    C'est utile pour faire fonctionner les adresses ".onion" avec les applications
    qui résolvent une adresse avant de s'y connecter. (Défaut: 0).

**AutomapHostsSuffixes** __SUFFIX__,__SUFFIX__,__...__::
    Une liste de suffixes, séparés par des virgules à utiliser avec **AutomapHostsOnResolve**.
    Le suffixe "." est équivalent à "toutes les adresses." (Défaut: .exit,.onion).

**DNSPort** __PORT__::
    Si non nul, Tor écoutera les requêtes DNS UDP sur ce port et effectuera
    des résolutions de manière anonyme. (Défaut: 0).

**DNSListenAddress** __IP__[:__PORT__]::
    Utiliser cette adresses pour écouter les connexions DNS. (Défaut: 127.0.0.1).

**ClientDNSRejectInternalAddresses** **0**|**1**::
    Si la valeur est vraie, Tor ne fera pas confiance aux réponses DNS récupérées
    de manière anonyme qui correspondent à des adresses internes (comme
    127.0.0.1 ou 192.168.0.1). Cette option empêche certaines attaques basées
    sur les navigateurs; ne la désactivez pas à moins de savoir ce que vous faîtes.
    (Défaut: 1).

**ClientRejectInternalAddresses** **0**|**1**::
    If true, Tor does not try to fulfill requests to connect to an internal
    address (like 127.0.0.1 or 192.168.0.1) __unless a exit node is
    specifically requested__ (for example, via a .exit hostname, or a
    controller request).  (Default: 1).

**DownloadExtraInfo** **0**|**1**::
    Tor téléchargera et mettra en cache les documents "extra-info" si la valeur est vraie.
    Ces documents contiennent des informations autres que les descripteurs standards
    de routage des serveurs. Tor n'utilise pas ces informations en interne. Pour épargner
    de la bande passante, laissez cette option de côté. (Défaut: 0).

**FallbackNetworkstatusFile** __NOM_DE_FICHIER__::
    Si Tor n'a pas de fichier de cache d'état de réseau, il utilisera celui-ci
    à la place. Même si ce fichier est obsolète, Tor peut toujours l'utiliser
    pour lister les mirroirs d'annuaire de manière à ne pas charger les
    autorités. (Défaut: Aucun).

**WarnPlaintextPorts** __port__,__port__,__...__::
    Indique à Tor d'emmettre des avertissements lorsque l'utilisateur tente
    de se connecter de manière anonyme à l'un de ces ports. Cette option est
    destinée à alerter les utilisateurs des services qui risquent d'envoyer leur
    mot de passe en clair. (Défaut: 23,109,110,143).

**RejectPlaintextPorts** __port__,__port__,__...__::
    Identique à WarnPlaintextPorts mais au lieu d'avertir sur l'utilisation risquée des ports, Tor
    refusera la connexion. (Défaut: None).

**AllowSingleHopCircuits** **0**|**1**::
    When this option is set, the attached Tor controller can use relays
    that have the **AllowSingleHopExits** option turned on to build
    one-hop Tor connections.  (Default: 0)

OPTIONS DU SERVEUR
------------------

Les options suivantes ne concernent que les serveurs (c'est à dire si ORPort
est non nul):

**Address** __address__::
    The IP address or fully qualified domain name of this server (e.g.
    moria.mit.edu). You can leave this unset, and Tor will guess your IP
    address.  This IP address is the one used to tell clients and other
    servers where to find your Tor server; it doesn't affect the IP that your
    Tor client binds to.  To bind to a different address, use the
    *ListenAddress and OutboundBindAddress options.

**AllowSingleHopExits** **0**|**1**::
    This option controls whether clients can use this server as a single hop
    proxy. If set to 1, clients can use this server as an exit even if it is
    the only hop in the circuit.  Note that most clients will refuse to use
    servers that set this option, since most clients have
    ExcludeSingleHopRelays set.  (Default: 0)

**AssumeReachable** **0**|**1**::
    Cette option est utilisée lors de la mise en place d'un nouveau réseau
    Tor. Si elle vaut 1, les tests d'accessibilité de ce serveur ne sont pas lancés,
    les descripteurs de serveur sont envoyé immédiatement.
    Si **AuthoritativeDirectory** est également activée, cette option indique
    au serveur d'annuaire de ne pas lancer les tests d'accès distant et de lister
    tous les serveurs connectés comme fonctionnels.

**BridgeRelay** **0**|**1**::
    Sets the relay to act as a "bridge" with respect to relaying connections
    from bridge users to the Tor network. It mainly causes Tor to publish a
    server descriptor to the bridge database, rather than publishing a relay
    descriptor to the public directory authorities.

**ContactInfo** __adresse_email__::
    Information de contact administratif pour le serveur. Cette ligne peut être récupérée
    par des robots de spam donc il faudra peut-être rendre difficile sa lecture comme une
    adresse email.

**ExitPolicy** __politique__,__politique__,__...__::
    Configure une politique de sortie pour ce serveur. Chaque politique est de la forme
     "**accept**|**reject** __ADDR__[/__MASQ__][:__PORT__]". Si /__MASQ__ n'est
     pas défini, alors cette politique concerne uniquement l'hôte indiqué. Au lieu d'utiliser
    un hôte ou un réseau, vous pouvez également employer "\*" pour l'univers (0.0.0.0/0).
    __PORT__ peut être un port unique ou un interval de ports
    "__PORT_DEBUT__-__PORT_FIN__", ou bien "\*". Si __PORT__ n'est pas défini,
    "\*" sera utilisé. +
 +
    Par exemple, "accept 18.7.22.69:\*,reject 18.0.0.0/8:\*,accept \*:\*" rejetera
    tout le trafic destiné au MIT à l'exception de web.mit.edu et acceptera tout
    le reste. +
 +
    Pour indiquer tous les réseaux internes et locaux (inclus 0.0.0.0/8,
    169.254.0.0/16,    127.0.0.0/8,    192.168.0.0/16, 10.0.0.0/8, et
    172.16.0.0/12), vous pouvez utiliser l'alias "private" à la place d'une adresse.
    Ces adresses sont rejetées par défaut (au début de votre politique de sortie),
    ainsi que votre adresse IP publique à moins que vous ayez configuré
    l'option ExitPolicyRejectPrivate à 0. Par exemple, une fois que vous l'aurez fait,
    vous pouvez autoriser HTTP sur 127.0.0.1 et bloquer toutes les autres connexions
    vers les réseaux internes avec "accept 127.0.0.1:80,reject private:\*", bien que
    cela permette également les connexions à votre machine adressées à
    votre adresse IP publique (externe). Consultez les RFC 1918 et 3330 pour plus
    de détails sur les espaces internes et réservés d'adresses IP. +
 +
    Cette directive peut être spécifiée plusieurs fois de manière à ne pas tout
    mettre dans une seule ligne. +
 +
    Les politiques sont exécutées dans l'ordre d'apparition et la première qui
    correspond s'applique. Si vous voulez \_remplacer_ la politique de sortie
    par défaut, terminez-la avec soit reject \*.*, soit accept \*.*. Sinon, vous
    préfixez la politique de sortie par défaut. Cette dernière est la suivante: +

       reject *:25
       reject *:119
       reject *:135-139
       reject *:445
       reject *:563
       reject *:1214
       reject *:4661-4666
       reject *:6346-6429
       reject *:6699
       reject *:6881-6999
       accept *:*

**ExitPolicyRejectPrivate** **0**|**1**::
    Rejette tous les réseaux privés (locaux), y compris votre adresse IP publique,
    au début du votre politique de sortie. Consultez l'entrée du dessus sur ExitPolicy.
    (Defaut: 1)

**MaxOnionsPending** __NUM__::
    Si vous avez plus que __NUM__ enveloppes à déchiffrer, les nouvelles sont
    rejetées. (Défaut: 100)

**MyFamily** __noeud__,__noeud__,__...__::
    Déclare que ce serveur Tor est contrôlé ou administré par un groupe ou
    par une organisation similaire aux autres serveurs, définis par leurs empreintes
    d'identité ou par leur surnom. Lorsque deux serveurs déclarent appartenir à la
    même "famille", les clients Tor ne les utiliseront pas dans un même circuit.
    (Chaque serveur n'a besoin que de listes les autres serveurs dans sa famille;
    il n'a pas besoin de se lister lui-même mais cela n'est pas perturbant.)

**Nickname** __nom__::
    Affecte le surnom du serveur à \'nom'. Les surnoms doivent comporter de 1 à 19
    charactères et doivent contenir uniquement les charactères [a-zA-Z0-9].

**NumCPUs** __num__::
    How many processes to use at once for decrypting onionskins and other
    parallelizable operations.  If this is set to 0, Tor will try to detect
    how many CPUs you have, defaulting to 1 if it can't tell.  (Default: 0)

**ORPort** __PORT__::
    Indique ce port pour attendre les connexions des clients et des serveurs Tor.

**ORListenAddress** __IP__[:__PORT__]::
    Ecoute sur cette adresse IP les connexions des clients et des serveurs
    Tor. Si vous indiquez un port, celui-ci est utilisé à la place de ORPort.
    (Défaut:0.0.0.0) Cette directive peut être indiquée plusieurs fois pour
    écouter sur plusieurs adresses/ports.

**PortForwarding** **0**|**1**::
    Attempt to automatically forward the DirPort and ORPort on a NAT router
    connecting this Tor server to the Internet. If set, Tor will try both
    NAT-PMP (common on Apple routers) and UPnP (common on routers from other
    manufacturers). (Default: 0)

**PortForwardingHelper** __filename__|__pathname__::
    If PortForwarding is set, use this executable to configure the forwarding.
    If set to a filename, the system path will be searched for the executable.
    If set to a path, only the specified path will be executed.
    (Default: tor-fw-helper)

**PublishServerDescriptor** **0**|**1**|**v1**|**v2**|**v3**|**bridge**,**...**::
    This option specifies which descriptors Tor will publish when acting as
    a relay. You can
    choose multiple arguments, separated by commas.
 +
    If this option is set to 0, Tor will not publish its
    descriptors to any directories. (This is useful if you're testing
    out your server, or if you're using a Tor controller that handles directory
    publishing for you.) Otherwise, Tor will publish its descriptors of all
    type(s) specified. The default is "1",
    which means "if running as a server, publish the
    appropriate descriptors to the authorities".

**ShutdownWaitLength** __NUM__::
    Lorsqu'un serveur Tor récupère un signal SIGINT, il commence à s'
    arrêter: fermeture des écoutes, refus de nouveaux circuits. Après **NUM**
    secondes, Tor s'arrête. Si le serveur reçoit un second signal SIGINT,
    il s'arrête immédiatement. (Défaut: 30 secondes)

**HeartbeatPeriod**  __N__ **minutes**|**hours**|**days**|**weeks**::
    Log a heartbeat message every **HeartbeatPeriod** seconds. This is
    a log level __info__ message, designed to let you know your Tor
    server is still alive and doing useful things. Settings this
    to 0 will disable the heartbeat. (Default: 6 hours)

**AccountingMax** __N__ **bytes**|**KB**|**MB**|**GB**|**TB**::
    Never send more than the specified number of bytes in a given accounting
    period, or receive more than that number in the period. For example, with
    AccountingMax set to 1 GB, a server could send 900 MB and receive 800 MB
    and continue running. It will only hibernate once one of the two reaches 1
    GB. When the number of bytes gets low, Tor will stop accepting new
    connections and circuits.  When the number of bytes
    is exhausted, Tor will hibernate until some
    time in the next accounting period. To prevent all servers from waking at
    the same time, Tor will also wait until a random point in each period
    before waking up. If you have bandwidth cost issues, enabling hibernation
    is preferable to setting a low bandwidth, since it provides users with a
    collection of fast servers that are up some of the time, which is more
    useful than a set of slow servers that are always "available".

**AccountingStart** **day**|**week**|**month** [__jour__] __HH:MM__::
    Indique la durée des périodes de décompte de bande passante. Si **month** est
    indiqué, chaque période de décompte dure de __HH:MM__ du jour __jour__
    jusqu'au jour du mois suivant, à la même heure. (le jour doit être compris entre 1
    et 28.) Si **week** est indiqué, chaque période de décompte dure de __HH:MM__
    du __jour__ à la même heure du même jour, une semaine plus tard, avec Lundi
    comme jour 1 et Dimanche comme jour 7. Si **day** est indiqué, chaque période
    de décompte court de l'heure __HH:MM__ à la même, le jour suivant. Toutes les
    heures sont locales et sont exprimées sur sur 24 heures. (Défaut à "month 1 0:00".)

**RefuseUnknownExits** **0**|**1**|**auto**::
    Prevent nodes that don't appear in the consensus from exiting using this
    relay.  If the option is 1, we always block exit attempts from such
    nodes; if it's 0, we never do, and if the option is "auto", then we do
    whatever the authorities suggest in the consensus. (Defaults to auto.)

**ServerDNSResolvConfFile** __nom_de_fichier__::
    Remplace la configuration DNS par défaut avec celle du fichier
    __nom_de_fichier__. Le format de fichier est le même que le standard
    Unix "**resolv.conf**" (7). Cette option, comme les autres options
    ServerDNS affecte seulement les résolutions de nom que votre serveur
    effectue pour les clients. (Défaut: utilise la configuration DNS du système).

**ServerDNSAllowBrokenConfig** **0**|**1**::
    Si cette option est fausse, Tor s'arrête immédiatement en cas de
    problème de lecture du fichier de configuration DNS ou dans la connexion
    aux serveurs. Sinon, Tor continue à interroger les serveurs de noms du
    du système jusqu'à ce que la requête réussisse. (Défaut: "1".)

**ServerDNSSearchDomains** **0**|**1**::
    Si mise à 1, les recherches se feront dans le domaine de recherche local.
    Par exemple, si ce système est configuré pour croire qu'il est dans le domaine
    "example.com" et qu'un client essaye de se connecter à "www", le client se
    connectera à "www.example.com". Cette option affecte uniquement la résolution
    de noms que votre serveur réalise pour les clients. (Défaut à "0".)

**ServerDNSDetectHijacking** **0**|**1**::
    Lorsque cette option est mise à 1, des tests réguliers sont lancés pour
    déterminer si les serveurs de nom locaux ont été configurés pour générer
    des réponses mensongères (en général vers un site de pub). Si c'est le cas,
    Tor tentera de corriger cette situation. Cette option affecte uniquement la
    résolution de noms que votre serveur effectue pour ses clients. (Défaut: "1".)

**ServerDNSTestAddresses** __adresse__,__adresse__,__...__::
    Lorsque les tests de détection de DNS menteurs sont lancés, ils vérifient si ces
    adresses __valides__ sont redirigées. Si c'est le cas, le DNS est complètement
    inutile et la politique de sortie est modifiée à "reject *.*". Cette option affecte
    uniquement la résolution de noms que votre serveur effectue pour ses clients.
    (Défaut: "www.google.com, www.mit.edu, www.yahoo.com, www.slashdot.org").

**ServerDNSAllowNonRFC953Hostnames** **0**|**1**::
    Lorsque cette option est désactivée, Tor ne lance aucune résolution sur les
    noms contenant des caractères illégaux (comme @ et :) au lieu de les
    envoyer sur un noeud de sortie pour être résolus. Cela permet de piéger
    toute tentative accidentelle de résolution d'URL. Cette option affecte uniquement
    les résolutions de nom que votre serveur réalise pour ses clients. (Defaut: 0)

**BridgeRecordUsageByCountry** **0**|**1**::
    Lorsque cette option est activée ainsi que BridgeRelay et que les données
    GeoIP sont disponibles, Tor conservera un décompte pays par pays du nombre
    d'adresses de clients qui l'ont contacter de manière à aider les autorité de
    passerelles à deviner quels sont les pays qui bloquent les accès. (Défaut: 1)

**ServerDNSRandomizeCase** **0**|**1**::
    Lorsque cette option est affectée, Tor modifie aléatoirement la casse de
    chaque caractère des requêtes DNS sortantes et vérifie que cette casse
    correspond à celle de la réponse DNS. Ce hack nommé "0x20 hack" permet
    de résister à des attaques d'empoisonnement DNS. Pour plus d'informations,
    consultez "Increasing DNS Forgery Resistance through 0X20-Bit Encoding".
    Cette option affecte uniquement les résolutions de noms effectuées par votre
    serveur pour ses clients. (Défaut: 1)

**GeoIPFile** __nom_de_fichier__::
    Un nom de fichier contenant des données GeoIP à utiliser avec l'option BridgeRecordUsageByCountry.

**CellStatistics** **0**|**1**::
    When this option is enabled, Tor writes statistics on the mean time that
    cells spend in circuit queues to disk every 24 hours. (Default: 0)

**DirReqStatistics** **0**|**1**::
    When this option is enabled, Tor writes statistics on the number and
    response time of network status requests to disk every 24 hours.
    (Default: 0)

**EntryStatistics** **0**|**1**::
    When this option is enabled, Tor writes statistics on the number of
    directly connecting clients to disk every 24 hours. (Default: 0)

**ExitPortStatistics** **0**|**1**::
    When this option is enabled, Tor writes statistics on the number of relayed
    bytes and opened stream per exit port to disk every 24 hours. (Default: 0)

**ConnDirectionStatistics** **0**|**1**::
    When this option is enabled, Tor writes statistics on the bidirectional use
    of connections to disk every 24 hours. (Default: 0)

**ExtraInfoStatistics** **0**|**1**::
    Lorsque cette option est activée, Tor inclue dans les statistiques précédemment
    citées, les documents d'informations supplémentaire qu'il envoie aux autorités
   d'annuaire. (Défaut: 0)

OPTIONS POUR LES SERVEURS D'ANNUAIRE
------------------------------------

Les options suivantes ne concernent que les serveur d'annuaire
(c'est-à-dire, si DirPort est non nul):

**AuthoritativeDirectory** **0**|**1**::
    Lorsque cette option est placée à 1, Tor fonctionne en tant qu'autorité
    d'annuaire. Au lieu de mettre en cache l'annuaire, il génère sa propre liste
    de serveurs actifs, la signe et l'envoie aux clients. A moins que les clients
    vous aient déjà identifié en tant qu'annuaire de confiance, vous n'avez
    probablement pas besoin de cette option. Merci de vous coordonner avec
    les autres administrateurs sur tor-ops@torproject.org si vous estimez que
    vous être un annuaire.

**DirPortFrontPage** __NOM_DE_FICHIER__::
    Lorsque cette option est activée, elle prend un fichier HTML et le publie sur
    "/" sur le port DirPort. Maintenant, les opérateurs de relais peuvent fournir un
    message d'information sans avoir besoin de configurer un serveur web pour ça.
    Un exemple de message d'information est disponible dans contrib/tor-exit-notice.html.

**V1AuthoritativeDirectory** **0**|**1**::
    Lorsque cette option est indiquée en plus de **AuthoritativeDirectory**,
    Tor génère un annuaire et des documents de routage en version 1 (pour les
    clients officiels jusqu'à la version 0.1.0.x).

**V2AuthoritativeDirectory** **0**|**1**::
    Lorsque cette option est indiquée en plus de **AuthoritativeDirectory**,
    Tor génère des états réseau et des descripteurs de serveur de version 2,
    tels que décrits dans doc/spec/dir-spec-v2.txt (pour les clients et les serveurs
    de version 0.1.1.x et 0.1.2.x).

**V2AuthoritativeDirectory** **0**|**1**::
    Lorsque cette option est indiquée en plus de **AuthoritativeDirectory**,
    Tor génère des états réseau et des descripteurs de serveur de version 3,
    tels que décrits dans doc/spec/dir-spec.txt (pour les clients et les serveurs
    de version au moins égale à 0.2.0.x).

**VersioningAuthoritativeDirectory** **0**|**1**::
    Lorsque cette option est mise à 1, Tor ajoute de l'information sur les
    versions de Tor reconnues comme sûre pour cet annuaire public. Chaque
    autorité en version 1 est automatiquement une autorité versionnée;
    Les autorités en version 2 fournissent optionnellement ce service. Consultez
    **RecommendedVersions**, **RecommendedClientVersions** et
    **RecommendedServerVersions**.

**NamingAuthoritativeDirectory** **0**|**1**::
    Lorsque cette option est mise à 1, le serveur avertit qu'il tient compte
    des liens surnoms-empreinte. Il incluera ce facteur dans les pages qu'il
    publie sur l'état du réseau en listant les serveurs avec le drapeau "Named"
    si un lien correct a pu être établi entre une empreinte et un surnom avec
    le serveur de nom. Ces serveurs de noms refuseront d'accepter ou de publier
    des descripteurs contenant des liens non vérifiés. Consultez **approved-routers**
    dans la section **FICHIERS** ci-dessous.

**HSAuthoritativeDir** **0**|**1**::
    When this option is set in addition to **AuthoritativeDirectory**, Tor also
    accepts and serves v0 hidden service descriptors,
    which are produced and used by Tor 0.2.1.x and older. (Default: 0)

**HidServDirectoryV2** **0**|**1**::
    Lorsque cette option est activée, Tor acceptera et servira des
    descripteurs de services cachés en version 2. Activer DirPort n'est
    pas obligatoire pour ça, car les clients se connectent via le port
    ORPort par défaut. (Défaut: 1)

**BridgeAuthoritativeDir** **0**|**1**::
    Lorsque cette option est activée en plus de **AuthoritativeDirectory**, Tor
    accepte et fournit des descripteurs de routeurs tout en mettant en cache
    et en fournissant les documents d'état de réseau plutôt que de les générer
    lui-même. (Défaut: 0)

**MinUptimeHidServDirectoryV2** __N__ **seconds**|**minutes**|**hours**|**days**|**weeks**::
    Temps minimum d'activité pour qu'un annuaire de service caché v2 soit accepté
    par les autorités d'annuaire. (Défaut: 24 hours)

**DirPort** __PORT__::
    Indique que le service d'annuaire est disponible sur ce port.

**DirListenAddress** __IP__[:__PORT__]::
    Écoute les requêtes d'annuaire sur cette adresse. Si vous avez indiqué
    un port, celui-ci sera utilisé à la place de DirPort. (Défaut: 0.0.0.0)
    Cette directive peut être indiquée plusieurs fois pour écouter sur plusieurs
    adresses/ports.

**DirPolicy** __politique__,__politique__,__...__::
    Indique une politique d'entrée pour ce serveur afin de limiter qui peut
    se connecter aux ports d'annuaire. Les politiques ont la même forme que
    les politiques de sortie ci-dessus.

OPTIONS DE SERVEUR D'AUTORITÉ D'ANNUAIRE
---------------------------------------

**RecommendedVersions** __CHAINE__::
    CHAINE est une liste séparée par des virgules des versions de Tor qui sont
    actuellement reconnues comme saines. La liste est intégrée à chaque annuaire
    et les noeuds qui les interrogent peuvent savoir s'ils doivent être mis à jour.
    Cette option peut apparaître plusieurs fois: les valeurs sur des lignes multiples
    sont aggrégées ensemble. Lorsque cette option est utilisée, il faut activer aussi
    l'option **VersioningAuthoritativeDirectory**.

**RecommendedClientVersions** __CHAINE__::
    CHAINE est une liste séparée par des virgules des versions de Tor reconnues
    comme versions de client saines. Cette information est intégrée dans les
    annuaires version 2. Si cette option n'est pas activée, la valeur de l'option
    **RecommendedVersions** est utilisée à la place. Lorsque cette option est
    activée, **VersioningAuthoritativeDirectory** doit l'être également.

**RecommendedServerVersions** __CHAINE__::
    CHAINE est une liste séparée par des virgules des versions serveur de Tor,
    reconnues pour être saines. Cette information est intégrée dans les
    annuaires version 2. Si cette option n'est pas activée, la valeur de l'option
    **RecommendedVersions** est utilisée à la place. Lorsque cette option est
    activée, **VersioningAuthoritativeDirectory** doit l'être également.

**ConsensusParams** __STRING__::
    STRING est une liste de paires clef=valeur séparées par des espaces que Tor
    incluera dans la ligne "params" de son vote sur l'état du réseau.

**DirAllowPrivateAddresses** **0**|**1**::
    Si enregistré à 1, Tor acceptera des descripteurs de routeurs avec des éléments
    arbitraires d'"adresse". Sinon, si l'adresse n'est pas une IP ou une IP privée,
    il rejettera le descripteur de routeur. Par défaut à 0.

**AuthDirBadDir** __Motif_Adresse...__::
    Pour les autorités d'annuaire uniquement. Un jeu de motifs d'adresses des
    serveurs qui seront listés comme mauvais annuaires dans tous les documents
    d'état de réseau publiés par les annuaires, si **AuthDirListBadDirs** est activée.

**AuthDirBadExit** __Motif_d_adresse...__::
    Pour les autorités d'annuaire uniquement. Un jeu de motifs d'adresse de
    serveurs qui seront identifiés comme mauvais noeuds de sortie dans tous
    les documents d'état de réseau publié par cette autorité, si l'option
    **AuthDirListBadExits** est activée.

**AuthDirInvalid** __Motif_d_adresse...__::
    Pour les autorités d'annuaire uniquement. Un jeu de motifs d'adresse de
    serveurs qui seront pas identifiés comme "valides" dans tous
    les documents d'état de réseau publié par cette autorité, si l'option
    **AuthDirListBadExits** est activée.

**AuthDirReject** __Motif_d_adresse...__::
    Pour les autorités d'annuaire uniquement. Un jeu de motifs d'adresse de
    serveurs qui seront pas du tout référencés par dans les documents d'état
    de réseau publiés par cette autorité, ou accepté comme un adresse OR dans
    aucun descripteur soumis à la publication par cette autorité.

**AuthDirListBadDirs** **0**|**1**::
    Pour les autorités d'annuaire uniquement. Lorsque cette option vaut
    1, cet annuaire dispose d'information sur les noeuds n'ayant pas
    de cache d'annuaire. (Ne mettez pas la valeur à 1 à moins de vouloir
    lister les annuaires non fonctionnels; sinon, vous votez en faveur de
    tous les annuaires déclarés.)

**AuthDirListBadExits** **0**|**1**::
    Pour les autorités d'annuaire uniquement. Si mise à 1, cet annuaire
    dispose d'information sur les noeuds qui ne peuvent pas être utilisés
    pour sortir du réseau. (Ne mettez pas cette option à 1 à moins de vouloir
    lister les noeuds qui ne fonctionnent pas; sinon, vous voterez en faveur
    de ceux qui sont déclarés comme noeuds de sortie).

**AuthDirRejectUnlisted** **0**|**1**::
    Pour les autorités d'annuaire uniquement. Si mise à 1, cet annuaire
    rejettera tous les descripteurs de serveurs qui ne sont pas listés dans
    le fichier des empreintes. Agit comme un "bouton panique" en cas
    d'attaque Sybil.

**AuthDirMaxServersPerAddr** __NUM__::
    Pour les autorités d'annuaire uniquement. Nombre maximum de serveurs
    qui seront listés comme acceptables sur une seule adresse IP. A mettre à
    "0" pour "no limit". (Défaut: 2)

**AuthDirMaxServersPerAuthAddr** __NUM__::
    Pour les autorités d'annuaire uniquement. Comme AuthDirMaxServersPerAddr
    mais s'applique uniquement aux adresses partagées avec les autorités
    d'annuaire. (Défaut: 5)

**V3AuthVotingInterval** __N__ **minutes**|**hours**::
    Pour les autorités d'annuaires V3 uniquement. Configure l'intervalle de vote
    de référence du serveur. Le vote aura court selon un intervalle choisi en
    consensus avec les intervalles de préférence de toutes les autorités.
    Ce temps devrait se diviser en entier sur une journée. (Défaut: 1 hour)

**V3AuthVoteDelay** __N__ **minutes**|**hours**::
    Pour les autorités d'annuaires V3 uniquement. Configure la durée de
    de référence du vote du serveur. Le délai sera le fruit d'un consensus
    avec les délais de référence de toutes les autres autorités. (Défaut: 5 minutes.)

**V3AuthDistDelay** __N__ **minutes**|**hours**::
    Pour les autorités d'annuaires V3 uniquement. Configure la durée du délai
    entre la publication du consensus et la signature une fois que toutes les autres
    signatures des autres autorités ont été récupérées. Le délai sera le fruit d'un
    consensus avec les délais de référence de toutes les autres autorités.
    (Défaut: 5 minutes.)

**V3AuthNIntervalsValid** __NUM__::
    Pour les autorités d'annuaires V3 uniquement. Configure le nombre de
    VotingIntervals pour lesquel chaque consensus doit être validé. Choisir un
    chiffre important augmente les risques de partition du réseau; choisir un
    chiffre faible augmente le trafic des annuaires. Notez que le nombre actuel
    utilisé n'est pas celui du serveur mais le fruit d'un consensus avec les autres
    autorités. Doit être au moins à 2. (Défaut: 3.)

**V3BandwidthsFile** __FILENAME__::
    V3 authoritative directories only. Configures the location of the
    bandiwdth-authority generated file storing information on relays' measured
    bandwidth capacities. (Default: unset.)

OPTIONS DES SERVICES CACHÉS
--------------------------

Les options suivantes ne concernent que la configuration d'un service caché.

**HiddenServiceDir** __REPERTOIRE__::
    Enregistre les fichiers de données d'un service caché dans REPERTOIRE. Chaque service caché
    doit avoir un répertoire séparé. Vous pouvez utiliser cette option plusieurs pour
    indiquer des services multiples.

**HiddenServicePort** __PORT_VIRT__ [__CIBLE__]::
    Configure un port PORT_VIRT virtuel pour un service caché. Vous pouvez
    utiliser cette option plusieurs fois, elle s'applique au service de la dernière
    hiddenservicedir déclarée. Par défaut, cette option lie le port virtuel au même
    port sur 127.0.0.1. Vous pouvez remplacer le port cible, l'adresse ou les deux
    en indiquant une cible d'adresse, de port ou adresse:port. Vous pouvez également
    plusieurs lignes avec le même PORT_VIRT: lorsqu'un utilisateur se connecte
    à ce VIRT_PORT, une des CIBLEs de ces lignes sera choisie au hasard.

**PublishHidServDescriptors** **0**|**1**::
    Si mise à 0, Tor fera fonctionner tous les services cachés que vous aurez
    configurés mais sans les exposer dans l'annuaire rendez-vous. Cette option
    est utile uniquement si vous employez un contrôleur Tor qui gère la publication
    des services cachés pour vous. (Défaut: 1)

**HiddenServiceVersion** __version__,__version__,__...__::
    Une liste de versions de descripteurs de service rendez-vous à publier
    pour le service caché. Pour l'instant, seule la version 2 est gérée. (Défaut: 2)

**HiddenServiceAuthorizeClient** __auth-type__ __client-name__,__client-name__,__...__::
    If configured, the hidden service is accessible for authorized clients
    only. The auth-type can either be \'basic' for a general-purpose
    authorization protocol or \'stealth' for a less scalable protocol that also
    hides service activity from unauthorized clients. Only clients that are
    listed here are authorized to access the hidden service. Valid client names
    are 1 to 19 characters  long and only use characters in A-Za-z0-9+-_ (no
    spaces). If this option is set, the hidden service is not accessible for
    clients without authorization any more. Generated authorization data can be
    found in the hostname file. Clients need to put this authorization data in
    their configuration file using **HidServAuth**.

**RendPostPeriod** __N__ **seconds**|**minutes**|**hours**|**days**|**weeks**::
    Every time the specified period elapses, Tor uploads any rendezvous 
    service descriptors to the directory servers. This information  is also
    uploaded whenever it changes. (Default: 1 hour)

OPTIONS DE TESTS RÉSEAU
-----------------------

Les options suivantes ne concernent que le lancement d'un réseau Tor de
test.

**TestingTorNetwork** **0**|**1**::
    Si mise à 1, Tor ajuste les valeurs par défaut des options de configuration
    ci-dessous, de manière à faciliter la mise en palce d'un réseau Tor de test.
    Ne peut être activé uniquement si le jeu par défaut des DirServers n'est pas
    utilisé. Ne peut être invalidé alors que Tor fonctionne. (Défaut: 0) +

       ServerDNSAllowBrokenConfig 1
       DirAllowPrivateAddresses 1
       EnforceDistinctSubnets 0
       AssumeReachable 1
       AuthDirMaxServersPerAddr 0
       AuthDirMaxServersPerAuthAddr 0
       ClientDNSRejectInternalAddresses 0
       ClientRejectInternalAddresses 0
       ExitPolicyRejectPrivate 0
       V3AuthVotingInterval 5 minutes
       V3AuthVoteDelay 20 seconds
       V3AuthDistDelay 20 seconds
       MinUptimeHidServDirectoryV2 0 seconds
       TestingV3AuthInitialVotingInterval 5 minutes
       TestingV3AuthInitialVoteDelay 20 seconds
       TestingV3AuthInitialDistDelay 20 seconds
       TestingAuthDirTimeToLearnReachability 0 minutes
       TestingEstimatedDescriptorPropagationTime 0 minutes

**TestingV3AuthInitialVotingInterval** __N__ **minutes**|**hours**::
    Comme V3AuthVotingInterval mais pour l'intervalle de vote initial avant
    la création du premier consensus. Modifier ce paramètre requiert l'
    activation de **TestingTorNetwork**. (Défaut: 30 minutes)

**TestingV3AuthInitialVoteDelay** __N__ **minutes**|**hours**::
    Comme TestingV3AuthInitialVoteDelay mais pour l'intervalle de vote initial
    avant la création du premier consensus. Modifier ce paramètre requiert l'
    activation de **TestingTorNetwork**. (Défaut: 5 minutes)

**TestingV3AuthInitialDistDelay** __N__ **minutes**|**hours**::
    Comme TestingV3AuthInitialDistDelay, mais pour l'intervalle de vote initial
    avant la création du premier consensus. Modifier ce paramètre requiert l'
    activation de **TestingTorNetwork**. (Défaut: 5 minutes)

**TestingAuthDirTimeToLearnReachability** __N__ **minutes**|**hours**::
    Après avoir démarré en tant qu'autorité, ne pas remonter le fait que les
    routeurs fonctionnent jusqu'à ce que ce temps soit passé. Modifier cette
    option implique que **TestingTorNetwork** soit activé. (Défaut: 30 minutes)

**TestingEstimatedDescriptorPropagationTime** __N__ **minutes**|**hours**::
    Les clients essaient de télécharger les descripteurs de routeur depuis le cache
    des annuaires après cette période. Modifier cette option requiert l'activation de
    **TestingTorNetwork**. (Défaut: 10 minutes)

SIGNAUX
-------

Tor récupère les signaux suivants:

**SIGTERM**::
    Tor récupérera ce signal, nettoiera et effectuera une synchronisation sur disque si nécéssaire, et enfin, s'arrêtera.

**SIGINT**::
    Les clients Tor se comporteront comme avec SIGTERM; mais les serveurs Tor effectueront une
    fermeture lente et contrôllée, en fermant les écoutes en en attendant 30 secondes avant de tout fermer.
    (Le délai peut être configuré avec l'option de configuration ShutdownWaitLength.)

**SIGHUP**::
    The signal instructs Tor to reload its configuration (including closing and
    reopening logs), and kill and restart its helper processes if applicable.

**SIGUSR1**::
    Journalise les statistiques à propos des connexions en cours et passées ainsi que sur le flux actuel.

**SIGUSR2**::
    Modifie tous les journaux au niveau debug. Vous pouvez récupérer les anciens niveaux de journalisation
    en envoyant un signal SIGHUP.

**SIGCHLD**::
    Tor reçoit ce signal lorsque l'un de ses processus d'aide a fermé, de manière
    à ce qu'il puisse effectuer un nettoyage.

**SIGPIPE**::
    Tor récupère ce signal et l'ignore.

**SIGXFSZ**::
    Si ce signal existe sur votre plateforme, Tor le récupère et l'ignore.

FICHIERS
--------

**@CONFDIR@/torrc**::
    Le fichier de configuration qui contient les paires "option valeur".

**@LOCALSTATEDIR@/lib/tor/**::
    Le processus Tor enregistre ses clefs et d'autres données à cet emplacement.

__DataDirectory__**/cached-status/**::
    Le document d'état du réseau téléchargé le plus récemment pour chaque
    autorité. Chaque fichier contient un seul document; les noms de fichier sont
    les empreintes hexadécimales des clefs d'identité des autorités d'annuaire.

__DataDirectory__**/cached-descriptors** et **cached-descriptors.new**::
    Ces fichiers contiennent le téléchargement des états des routeurs. Certains
    routeurs peuvent apparaître plus d'une fois; dans ce cas, le descripteur le plus
    récent est utilisé. Les lignes qui commencent par @ sont des annotations
    contenant plus d'informations sur un routeur donné. Le fichier "new" est un
    journal en ajout-seul; lorsqu'il devient trop important, toutes les entrées sont
    fusionnées dans un nouveau fichier de cache de descripteurs.

__DataDirectory__**/cached-routers** and **cached-routers.new**::
    Versions obsolètes du cache des descripteurs. Lorsque Tor ne peut
    pas trouver de nouveaux fichiers, il regarde à l'emplacement indiqué à la place.

__DataDirectory__**/state**::
    Un jeu persistant de clef-valeur. Elles sont documentées dans le
    fichier. Elles incluent:
            - Les noeuds d'entrées et leur état.            - Les valeurs de décompte de bande passante (inutilisées pour
            l'instant, voir plus loin).
            - Quand le fichier a été écrit pour la dernière fois
            - Quelle version de Tor a généré le fichier d'état
            - Un court historique de l'utilisation de la bande passante tel que
            produits dans les descripteurs du routeur.

__DataDirectory__**/bw_accounting**::
    Utilisé pour tracer les valeurs de décompte de bande passante (quand la
    période actuelle commence et s'arrête; combien d'octets ont été lus et écrits
    jusqu'à maintenant). Ce fichier est obsolète et les données sont maintenant
    stockées dans le fichier \'state'. Uniquement lorsque le décompte de bande
    passante a été activé.

__DataDirectory__**/control_auth_cookie**::
    Utilisé pour l'authentification par cookie pour le contrôleur. L'emplacement
    peut être remplacé par l'option CookieAuthFile. Regénéré au démarrage.
    Consultez control-spec.txt pour les détails. Utilisé uniquement lorsque
    l'authentification est activée.

__DataDirectory__**/clefs/***::
    Seulement utilisé par les serveurs. Contient les clefs d'identité et les clefs oignons.

__DataDirectory__**/empreinte**::
    Uniquement utilisé par les serveurs. Contient l'empreinte de la clef d'identité du serveur.

__DataDirectory__**/approved-routers**::
    Uniquement pour les serveurs d'autorité d'annuaire (voir
    **NamingAuthoritativeDirectory**). Ce fichier liste les liens surnom-
    identité. Chaque ligne liste un surnom et une empreinte séparés par
    un espace. Consultez votre fichier **fingerprint** dans __DataDirectory__
    pour un exemple de ligne. Si le surnom est **!reject** alors les descripteurs
    de l'identité (empreinte) sont rejetés par ce serveur. S'il est **!invalid**,
    les descripteurs sont acceptés mais indiqués comme non valides dans
    l'annuaire, ce qui est, non recommandé.

__DataDirectory__**/router-stability**::
    Utilisé uniquement par les serveurs d'autorité d'annuaires. Suit les mesures de
    temps moyen avant échec des routeurs de manière à ce que les autorités aient une bonne
    idée de la manière dont elles doivent appliquer leurs drapeaux Stable.

__HiddenServiceDirectory__**/nom_d_hôte**::
    L'<empreinte-encodée-en base32>du  nom de domaine .onion pour ce service caché.
    Si le service caché est restreint à des clients identifiés, ce fichier
    contiendra également les données d'authentification pour tous les clients.

__HiddenServiceDirectory__**/clef_privée**::
    La clef privée pour ce service caché.

__HiddenServiceDirectory__**/clefs_client**::
    Données d'authentification pour un service caché uniquement accessible
    par les clients identifiés.

A VOIRE
--------
**privoxy**(1), **tsocks**(1), **torify**(1) +

**https://www.torproject.org/**


BUGS
----

Il en existe plein, probablement. Tor est encore en état de
développement. Il est prié de les reporter.

AUTEURS
-------
Roger Dingledine [arma at mit.edu], Nick Mathewson [nickm at alum.mit.edu].

